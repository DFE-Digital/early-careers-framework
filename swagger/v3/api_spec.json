{
  "openapi": "3.0.1",
  "info": {
    "version": "3.0.0",
    "title": "Lead provider API - 3.0.0",
    "contact": {
      "name": "DfE",
      "email": "continuing-professional-development@digital.education.gov.uk"
    },
    "description": "The lead provider API for DfE's manage teacher CPD service."
  },
  "servers": [
    {
      "url": "https://sb.manage-training-for-early-career-teachers.education.gov.uk",
      "description": "Sandbox"
    },
    {
      "url": "/",
      "description": "Current environment"
    },
    {
      "url": "https://manage-training-for-early-career-teachers.education.gov.uk",
      "description": "Production"
    }
  ],
  "paths": {
    "/api/v3/delivery-partners": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve delivery partners",
        "operationId": "delivery_patrners_get",
        "tags": [
          "delivery partners"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DeliveryPartnersFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine delivery partners to return.",
            "example": "filter[cohort]=2021"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of delivery partners."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DeliveryPartnersSort"
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Sort delivery partners being returned.",
            "example": "sort=-updated_at"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return a list of delivery partners",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryPartnersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/delivery-partners/{id}": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve a specific delivery partner",
        "operationId": "delivery_patrner_get",
        "tags": [
          "delivery partners"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the delivery partner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00acafd3-e6f6-41e7-a770-3207be94f755"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return a specific delivery partner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryPartnerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/participants/ecf/transfers": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve multiple ECF participant transfers",
        "operationId": "participants",
        "tags": [
          "participant transfers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ListFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine participant transfers to return.",
            "example": "filter[updated_since]=2020-11-13T11:21:55Z"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of participant transfers."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of ECF participant transfers",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "data": [
                        {
                          "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                          "type": "participant-transfer",
                          "attributes": {
                            "updated_at": "2021-05-31T02:22:32.000Z",
                            "transfers": {
                              "training_record_id": "000a97ff-d2a9-4779-a397-9bfd9063072e",
                              "transfer_type": "new_provider",
                              "status": "complete",
                              "leaving": {
                                "school_urn": "123456",
                                "provider": "Old Institute",
                                "date": "2021-05-31"
                              },
                              "joining": {
                                "school_urn": "654321",
                                "provider": "New Institute",
                                "date": "2021-06-01"
                              },
                              "created_at": "2021-05-31T02:22:32.000Z"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MultipleECFParticipantTransferResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/participants/ecf/{id}/transfers": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Get a single participant's transfers",
        "operationId": "participant_transfers",
        "tags": [
          "participant transfers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the ECF participant.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single participant's transfers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFParticipantTransferResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/participants/ecf": {
      "get": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Retrieve multiple participants, replaces <code>/api/v3/participants</code>",
        "operationId": "participants",
        "tags": [
          "ECF participants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECFParticipantFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine ECF participants to return.",
            "example": "filter[cohort]=2022&filter[from_participant_id]=439ac4fe-a003-417f-9694-07c45b3482f8&filter[training_status]=active&filter[updated_since]=2020-11-13T11:21:55Z"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of ECF participants."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECFParticipantsSort"
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Sort ECF participants being returned.",
            "example": "sort=-updated_at"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of ECF participants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleECFParticipantsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/participants/ecf/{id}": {
      "get": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Get a single ECF participant",
        "operationId": "ecf_participant",
        "tags": [
          "ECF participants"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the ECF participant.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single ECF participant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFParticipantResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/participants/ecf/{id}/defer": {
      "put": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Notify that an ECF participant is taking a break from their course",
        "operationId": "ecf_participant_defer",
        "tags": [
          "ECF Participant"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the participant to defer",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ECF participant being deferred",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "data": {
                        "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                        "type": "participant",
                        "attributes": {
                          "full_name": "Jane Smith",
                          "teacher_reference_number": "1234567",
                          "updated_at": "2021-05-31T02:22:32.000Z",
                          "ecf_enrolments": [
                            {
                              "training_record_id": "000a97ff-d2a9-4779-a397-9bfd9063072e",
                              "email": "jane.smith@some-school.example.com",
                              "mentor_id": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
                              "school_urn": "106286",
                              "participant_type": "ect",
                              "cohort": "2021",
                              "training_status": "withdrawn",
                              "participant_status": "withdrawn",
                              "teacher_reference_number_validated": true,
                              "eligible_for_funding": true,
                              "pupil_premium_uplift": true,
                              "sparsity_uplift": true,
                              "schedule_identifier": "ecf-standard-january",
                              "delivery_partner_id": "cd3a12347-7308-4879-942a-c4a70ced400a",
                              "withdrawal": null,
                              "deferral": {
                                "reason": "other",
                                "date": "2021-06-31T02:22:32.000Z"
                              },
                              "created_at": "2022-11-09T16:07:38Z",
                              "induction_end_date": "2022-01-12",
                              "mentor_funding_end_date": "2021-04-19",
                              "cohort_changed_after_payments_frozen": true,
                              "mentor_ineligible_for_funding_reason": null
                            }
                          ],
                          "participant_id_changes": [
                            {
                              "from_participant_id": "23dd8d66-e11f-4139-9001-86b4f9abcb02",
                              "to_participant_id": "db3a7848-7308-4879-942a-c4a70ced400a",
                              "changed_at": "2023-09-23T02:22:32.000Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ECFParticipantResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECFParticipantDeferRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/participants/ecf/{id}/resume": {
      "put": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Notify that an ECF participant is resuming their course",
        "operationId": "ecf_participant_resume",
        "tags": [
          "ECF Participant"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the participant to resume",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ECF participant being resumed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFParticipantResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECFParticipantResumeRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/participants/ecf/{id}/withdraw": {
      "put": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Notify that an ECF participant has withdrawn from their course",
        "operationId": "participant",
        "tags": [
          "ECF Participant"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the participant to withdraw",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ECF participant being withdrawn",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "data": {
                        "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                        "type": "participant",
                        "attributes": {
                          "full_name": "Jane Smith",
                          "teacher_reference_number": "1234567",
                          "updated_at": "2021-05-31T02:22:32.000Z",
                          "ecf_enrolments": [
                            {
                              "training_record_id": "000a97ff-d2a9-4779-a397-9bfd9063072e",
                              "email": "jane.smith@some-school.example.com",
                              "mentor_id": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
                              "school_urn": "106286",
                              "participant_type": "ect",
                              "cohort": "2021",
                              "training_status": "withdrawn",
                              "participant_status": "withdrawn",
                              "teacher_reference_number_validated": true,
                              "eligible_for_funding": true,
                              "pupil_premium_uplift": true,
                              "sparsity_uplift": true,
                              "schedule_identifier": "ecf-standard-january",
                              "delivery_partner_id": "cd3a12347-7308-4879-942a-c4a70ced400a",
                              "withdrawal": {
                                "reason": "other",
                                "date": "2021-06-31T02:22:32.000Z"
                              },
                              "deferral": null,
                              "created_at": "2022-11-09T16:07:38Z",
                              "induction_end_date": "2022-01-12",
                              "mentor_funding_end_date": "2021-04-19",
                              "cohort_changed_after_payments_frozen": false,
                              "mentor_ineligible_for_funding_reason": null
                            }
                          ],
                          "participant_id_changes": [
                            {
                              "from_participant_id": "23dd8d66-e11f-4139-9001-86b4f9abcb02",
                              "to_participant_id": "db3a7848-7308-4879-942a-c4a70ced400a",
                              "changed_at": "2023-09-23T02:22:32.000Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ECFParticipantResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECFParticipantWithdrawRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/participants/ecf/{id}/change-schedule": {
      "put": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Notify that an ECF Participant is changing training schedule",
        "operationId": "ecf_participant_change_schedule",
        "tags": [
          "ECF Participant"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the participant",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ECF Participant changing schedule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFParticipantResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECFParticipantChangeScheduleRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/partnerships/ecf": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve multiple ECF partnerships",
        "operationId": "partnerships_ecf_get",
        "tags": [
          "ECF partnerships"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "schema": {
              "$ref": "#/components/schemas/PartnershipsFilter"
            },
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine partnerships to return.",
            "example": "filter[cohort]=2021,2022"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of partnerships."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PartnershipsSort"
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Sort partnerships being returned.",
            "example": "sort=-updated_at"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of ECF partnerships",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleECFPartnershipsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Create an ECF partnership with a school and delivery partner",
        "operationId": "partnerships_ecf_post",
        "tags": [
          "ECF partnerships"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Create an ECF partnership",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "data": {
                        "id": "cd3a12347-7308-4879-942a-c4a70ced400a",
                        "type": "partnership",
                        "attributes": {
                          "cohort": 2021,
                          "urn": "123456",
                          "school_id": "dd4a11347-7308-4879-942a-c4a70ced400v",
                          "delivery_partner_id": "db2fbf67-b7b7-454f-a1b7-0020411e2314",
                          "delivery_partner_name": "Delivery Partner Example",
                          "status": "active",
                          "challenged_reason": null,
                          "challenged_at": null,
                          "induction_tutor_name": "John Doe",
                          "induction_tutor_email": "john.doe@example.com",
                          "updated_at": "2021-05-31T02:22:32.000Z",
                          "created_at": "2021-05-31T02:22:32.000Z"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ECFPartnershipResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFPartnershipRequestErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECFPartnershipRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/partnerships/ecf/{id}": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Get a single ECF partnership",
        "operationId": "partnerships_ecf_get",
        "tags": [
          "ECF partnerships"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the partnership",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00acafd3-e6f6-41e7-a770-3207be94f755"
          }
        ],
        "responses": {
          "200": {
            "description": "A single partnership",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFPartnershipResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Update a partnership’s delivery partner in an existing partnership in a cohort",
        "operationId": "partnerships_ecf_put",
        "tags": [
          "ECF partnerships"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the partnership to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update an ECF partnership",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "data": {
                        "id": "cd3a12347-7308-4879-942a-c4a70ced400a",
                        "type": "partnership",
                        "attributes": {
                          "cohort": 2021,
                          "urn": "123456",
                          "school_id": "dd4a11347-7308-4879-942a-c4a70ced400v",
                          "delivery_partner_id": "db2fbf67-b7b7-454f-a1b7-0020411e2314",
                          "delivery_partner_name": "Delivery Partner Example",
                          "status": "active",
                          "challenged_reason": null,
                          "challenged_at": null,
                          "induction_tutor_name": "John Doe",
                          "induction_tutor_email": "john.doe@example.com",
                          "updated_at": "2021-05-31T02:22:32.000Z",
                          "created_at": "2021-05-31T02:22:32.000Z"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ECFPartnershipResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFPartnershipRequestErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ECFPartnershipUpdateRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/schools/ecf": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve multiple ECF schools scoped to cohort",
        "operationId": "school_ecf_get",
        "tags": [
          "ECF schools"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter[cohort]",
            "schema": {
              "$ref": "#/components/schemas/ECFSchoolsFilter"
            },
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "required": true,
            "description": "Refine schools to return.",
            "example": "filter[cohort]=2021"
          },
          {
            "name": "filter[urn]",
            "schema": {
              "$ref": "#/components/schemas/ECFSchoolsFilter"
            },
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine schools to return.",
            "example": "filter[urn]=106286"
          },
          {
            "name": "filter[updated_since]",
            "schema": {
              "$ref": "#/components/schemas/ECFSchoolsFilter"
            },
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine schools to return.",
            "example": "filter[updated_since]=2020-11-13T11:21:55Z"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of schools."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECFSchoolsSort"
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Sort schools being returned.",
            "example": "sort=-updated_at"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of schools for the given cohort",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleECFSchoolsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/schools/ecf/{id}": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Get a single ECF school scoped to cohort",
        "operationId": "school_ecf_get",
        "tags": [
          "ECF schools"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the school",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75"
          },
          {
            "name": "filter[cohort]",
            "schema": {
              "$ref": "#/components/schemas/ECFSchoolsFilter"
            },
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "required": true,
            "description": "Refine schools to return.",
            "example": "filter[cohort]=2021"
          }
        ],
        "responses": {
          "200": {
            "description": "A single school",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ECFSchoolResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/unfunded-mentors/ecf": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve multiple unfunded mentors",
        "operationId": "participants",
        "tags": [
          "unfunded mentors"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ListFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine unfunded mentors to return.",
            "example": "filter[updated_since]=2020-11-13T11:21:55Z"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of unfunded mentors."
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECFUnfundedMentorsSort"
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Sort unfunded mentors being returned.",
            "example": "sort=-updated_at"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of unfunded mentors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleUnfundedMentorsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/unfunded-mentors/ecf/{id}": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Get a single unfunded mentor",
        "operationId": "unfunded_mentors",
        "tags": [
          "unfunded mentors"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the unfunded mentor.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single unfunded mentor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnfundedMentorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/participant-declarations": {
      "get": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>List all participant declarations",
        "operationId": "participant_declarations",
        "tags": [
          "Participant declarations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParticipantDeclarationsFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine participant declarations to return.",
            "example": "filter[participant_id]=ab3a7848-1208-7679-942a-b4a70eed400a&filter[updated_since]=2020-11-13T11:21:55Z"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of participant declarations."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of participant declarations",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "data": [
                        {
                          "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                          "type": "participant-declaration",
                          "attributes": {
                            "participant_id": "08d78829-f864-417f-8a30-cb7655714e28",
                            "declaration_type": "started",
                            "declaration_date": "2020-11-13T11:21:55Z",
                            "course_identifier": "ecf-induction",
                            "state": "eligible",
                            "updated_at": "2020-11-13T11:21:55Z",
                            "created_at": "2020-11-13T11:21:55Z",
                            "delivery_partner_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                            "statement_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                            "clawback_statement_id": null,
                            "ineligible_for_funding_reason": null,
                            "mentor_id": "907f61ed-5770-4d38-b22c-1a4265939378",
                            "uplift_paid": true,
                            "evidence_held": "other",
                            "has_passed": null,
                            "lead_provider_name": "Example Institute"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/MultipleParticipantDeclarationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Declare a participant has reached a milestone. Idempotent endpoint - submitting exact copy of a request will return the same response body as submitting it the first time.",
        "operationId": "participant_declaration_create",
        "tags": [
          "Participant declarations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "examples": {
                  "success_ecf": {
                    "value": {
                      "data": {
                        "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                        "type": "participant-declaration",
                        "attributes": {
                          "participant_id": "08d78829-f864-417f-8a30-cb7655714e28",
                          "declaration_type": "started",
                          "declaration_date": "2020-11-13T11:21:55Z",
                          "course_identifier": "ecf-induction",
                          "state": "eligible",
                          "updated_at": "2020-11-13T11:21:55Z",
                          "created_at": "2020-11-13T11:21:55Z",
                          "delivery_partner_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                          "statement_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                          "clawback_statement_id": null,
                          "ineligible_for_funding_reason": null,
                          "mentor_id": "907f61ed-5770-4d38-b22c-1a4265939378",
                          "uplift_paid": true,
                          "evidence_held": "other",
                          "has_passed": null,
                          "lead_provider_name": "Example Institute"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SingleParticipantDeclarationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Bad or Missing parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantDeclarationRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/participant-declarations/{id}": {
      "get": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Get single participant declaration",
        "operationId": "participant_declaration",
        "tags": [
          "Participant declarations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "9ed4612b-f8bd-44d9-b296-38ab103fadd2",
            "description": "The ID of the participant declaration ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single participant declaration",
            "content": {
              "application/json": {
                "examples": {
                  "success_ecf": {
                    "value": {
                      "data": {
                        "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                        "type": "participant-declaration",
                        "attributes": {
                          "participant_id": "08d78829-f864-417f-8a30-cb7655714e28",
                          "declaration_type": "started",
                          "declaration_date": "2020-11-13T11:21:55Z",
                          "course_identifier": "ecf-induction",
                          "state": "eligible",
                          "updated_at": "2020-11-13T11:21:55Z",
                          "created_at": "2020-11-13T11:21:55Z",
                          "delivery_partner_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                          "statement_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                          "clawback_statement_id": null,
                          "ineligible_for_funding_reason": null,
                          "mentor_id": "907f61ed-5770-4d38-b22c-1a4265939378",
                          "uplift_paid": true,
                          "evidence_held": "other",
                          "has_passed": null,
                          "lead_provider_name": "Example Institute"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SingleParticipantDeclarationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/participant-declarations/{id}/void": {
      "put": {
        "summary": "<b>Note, this endpoint includes updated specifications.</b><br/>Void a declaration - it will not be soft-deleted",
        "operationId": "participant_declaration_void",
        "tags": [
          "Participant declarations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "28c461ee-ffc0-4e56-96bd-788579a0ed75",
            "description": "The ID of the declaration to void",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "examples": {
                  "success_ecf": {
                    "value": {
                      "data": {
                        "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                        "type": "participant-declaration",
                        "attributes": {
                          "participant_id": "08d78829-f864-417f-8a30-cb7655714e28",
                          "declaration_type": "started",
                          "declaration_date": "2020-11-13T11:21:55Z",
                          "course_identifier": "ecf-induction",
                          "state": "voided",
                          "updated_at": "2020-11-13T11:21:55Z",
                          "created_at": "2020-11-13T11:21:55Z",
                          "delivery_partner_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                          "statement_id": "99ca2223-8c1f-4ac8-985d-a0672e97694e",
                          "clawback_statement_id": null,
                          "ineligible_for_funding_reason": null,
                          "mentor_id": "907f61ed-5770-4d38-b22c-1a4265939378",
                          "uplift_paid": true,
                          "evidence_held": "other",
                          "has_passed": null,
                          "lead_provider_name": "Example Institute"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SingleParticipantDeclarationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/statements": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve financial statements",
        "operationId": "statements_get",
        "tags": [
          "statements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/StatementsFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine statements to return.",
            "example": "filter[cohort]=2021,2022&filter[type]=ecf&filter[updated_since]=2020-11-13T11:21:55Z"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": "page[page]=1&page[per_page]=5",
            "description": "Pagination options to navigate through the list of statements."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of statements as part of which the DfE will make output payments for ecf participants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/statements/{id}": {
      "get": {
        "summary": "<b>Note, this endpoint is new.</b><br/>Retrieve specific financial statement",
        "operationId": "statement_get",
        "tags": [
          "statements"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The unique ID of the statement",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "fe82db5d-a7ff-42b4-9eb7-19a87bf0ce5f"
          }
        ],
        "responses": {
          "200": {
            "description": "A specific financial statement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatementResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "string",
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "BadOrMissingParametersResponse": {
        "description": "Request was missing data or contained invalid data",
        "type": "object",
        "required": [
          "bad_or_missing_parameters"
        ],
        "properties": {
          "bad_or_missing_parameters": {
            "description": "An error message for each bad or missing attribute describing the problems",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "example": [
              "participant_id",
              "declaration_date",
              "declaration_type",
              "course_identifier"
            ]
          }
        }
      },
      "BadRequestResponse": {
        "description": "Bad Request",
        "type": "object",
        "example": {
          "errors": [
            {
              "title": "Bad request",
              "detail": "correct json data structure required. See API docs for reference"
            }
          ]
        },
        "properties": {
          "bad_request": {
            "description": "An error message for bad request",
            "type": "string"
          }
        }
      },
      "DeliveryPartner": {
        "description": "A delivery partner",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the delivery partner",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "delivery-partner"
          },
          "attributes": {
            "$ref": "#/components/schemas/DeliveryPartnerAttributes"
          }
        }
      },
      "DeliveryPartnerAttributes": {
        "description": "The data attributes associated with a delivery partner",
        "type": "object",
        "required": [
          "name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "name": {
            "description": "The name of the delivery partner you are working with",
            "type": "string",
            "nullable": false,
            "example": "Awesome Delivery Partner Ltd"
          },
          "cohort": {
            "description": "The cohorts for which you may report school partnerships with this delivery partner",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "2021",
              "2022"
            ]
          },
          "created_at": {
            "description": "The date and time the delivery partner was created",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "updated_at": {
            "description": "The date and time the delivery partner was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        }
      },
      "DeliveryPartnerCohortError": {
        "description": "Not a delivery partner you have a relationship with for this cohort",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of error message",
            "type": "string",
            "enum": [
              "Not a delivery partner you have a relationship with for this cohort"
            ],
            "example": "Not a delivery partner you have a relationship with for this cohort"
          },
          "detail": {
            "description": "Additional info on which cohorts are available",
            "type": "string",
            "example": "Delivery partner is available for 2021 cohort only"
          }
        }
      },
      "DeliveryPartnerResponse": {
        "description": "A delivery partner",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeliveryPartner"
          }
        }
      },
      "DeliveryPartnersFilter": {
        "description": "Filter delivery partners to return more specific results",
        "type": "object",
        "properties": {
          "cohort": {
            "description": "Return delivery partners from the specified cohort or cohorts. This is a comma delimited string of years.",
            "type": "string",
            "example": [
              20212022
            ]
          }
        }
      },
      "DeliveryPartnersResponse": {
        "description": "A list of delivery partners",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryPartner"
            }
          }
        }
      },
      "DeliveryPartnersSort": {
        "description": "Sort delivery partners being returned",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "created_at",
            "-created_at",
            "updated_at",
            "-updated_at"
          ]
        }
      },
      "ECFDeferral": {
        "description": "The details of an ECF Participant deferral",
        "type": "object",
        "required": [
          "reason",
          "date"
        ],
        "properties": {
          "reason": {
            "description": "The reason a participant was deferred",
            "type": "string",
            "example": "career-break",
            "enum": [
              "bereavement",
              "long-term-sickness",
              "parental-leave",
              "career-break",
              "other"
            ]
          },
          "date": {
            "description": "The date and time the participant was deferred",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        },
        "example": {
          "reason": "career-break",
          "date": "2021-05-31T02:22:32.000Z"
        }
      },
      "ECFEnrolment": {
        "description": "The details of an ECF Participant enrolment",
        "type": "object",
        "required": [
          "training_record_id",
          "email",
          "school_urn",
          "participant_type",
          "cohort",
          "training_status",
          "participant_status",
          "teacher_reference_number_validated",
          "eligible_for_funding",
          "pupil_premium_uplift",
          "sparsity_uplift",
          "schedule_identifier",
          "delivery_partner_id",
          "created_at"
        ],
        "properties": {
          "training_record_id": {
            "description": "The unique identifier of the participant training record. Should the DfE dedupe a participant, this value will not change.",
            "type": "string",
            "format": "uuid",
            "example": "000a97ff-d2a9-4779-a397-9bfd9063072e"
          },
          "email": {
            "description": "The email address registered for this ECF participant",
            "type": "string",
            "example": "jane.smith@some-school.example.com"
          },
          "mentor_id": {
            "description": "The unique identifier of this ECF participants mentor",
            "type": "string",
            "nullable": true,
            "example": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
            "format": "uuid"
          },
          "school_urn": {
            "description": "The Unique Reference Number (URN) of the school that submitted this ECF participant",
            "type": "string",
            "example": "106286"
          },
          "participant_type": {
            "description": "The type of ECF participant this record refers to",
            "type": "string",
            "example": "ect",
            "enum": [
              "ect",
              "mentor"
            ]
          },
          "cohort": {
            "description": "Indicates which call-off contract funds this participant's training. 2021 indicates a participant that has started, or will start, their training in the 2021/22 academic year.",
            "type": "string",
            "example": "2021"
          },
          "training_status": {
            "description": "The training status of the ECF participant",
            "type": "string",
            "example": "active",
            "enum": [
              "active",
              "deferred",
              "withdrawn"
            ]
          },
          "participant_status": {
            "description": "Replaces the old status field. Indicates if a SIT has advised DfE of a transfer or a withdrawal of the participant from the school",
            "type": "string",
            "enum": [
              "active",
              "joining",
              "leaving",
              "left",
              "withdrawn"
            ],
            "example": "active"
          },
          "teacher_reference_number_validated": {
            "description": "Indicates whether the Teacher Reference Number (TRN) has been validated",
            "type": "boolean",
            "example": true
          },
          "eligible_for_funding": {
            "description": "Indicates whether this participant is eligible to receive DfE funded induction",
            "type": "boolean",
            "nullable": true,
            "example": true
          },
          "pupil_premium_uplift": {
            "description": "Indicates whether this participant qualifies for an uplift payment due to pupil premium",
            "type": "boolean",
            "example": true
          },
          "sparsity_uplift": {
            "description": "Indicates whether this participant qualifies for an uplift payment due to sparsity",
            "type": "boolean",
            "example": true
          },
          "schedule_identifier": {
            "description": "The schedule of the ECF participant. For the possible values please refer to the <a href=\"/api-reference/ecf/schedules-and-milestone-dates.html#schedules-and-milestone-dates\" class=\"govuk-link\">ECF schedules and milestone dates guidance</a>.",
            "type": "string",
            "enum": [
              "ecf-standard-september",
              "ecf-standard-january",
              "ecf-standard-april",
              "ecf-reduced-september",
              "ecf-reduced-january",
              "ecf-reduced-april",
              "ecf-extended-september",
              "ecf-extended-january",
              "ecf-extended-april",
              "ecf-replacement-september",
              "ecf-replacement-january",
              "ecf-replacement-april"
            ],
            "example": "ecf-standard-january"
          },
          "delivery_partner_id": {
            "description": "Unique ID of the delivery partner associated with the participant",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "withdrawal": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/ECFWithdrawal"
              }
            ]
          },
          "deferral": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/ECFDeferral"
              }
            ]
          },
          "created_at": {
            "description": "The date and time the ECF participant was created",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "induction_end_date": {
            "description": "The ECF participant induction end date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2022-01-12"
          },
          "mentor_funding_end_date": {
            "description": "The ECF participant mentor training completion date",
            "type": "string",
            "format": "date",
            "nullable": true,
            "example": "2021-04-19"
          },
          "cohort_changed_after_payments_frozen": {
            "description": "Identify participants that migrated to a new cohort as payments were frozen on their original cohort",
            "type": "boolean",
            "example": true
          },
          "mentor_ineligible_for_funding_reason": {
            "description": "The reason why funding for a mentor's training has ended",
            "type": "string",
            "nullable": true,
            "enum": [
              "completed_declaration_received",
              "completed_during_early_roll_out",
              "started_not_completed"
            ],
            "example": "completed_declaration_received"
          }
        }
      },
      "ECFParticipant": {
        "description": "<b>Note, this endpoint includes updated specifications.</b><br/>The details of a participant",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the participant record",
            "type": "string",
            "format": "uuid",
            "example": "ac3d1243-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "participant"
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFParticipantAttributes"
          }
        }
      },
      "ECFParticipantAttributes": {
        "description": "The data attributes associated with an ECF participant",
        "type": "object",
        "required": [
          "full_name",
          "updated_at",
          "ecf_enrolments",
          "participant_id_changes"
        ],
        "properties": {
          "full_name": {
            "description": "The full name of this ECF participant",
            "type": "string",
            "example": "Jane Smith"
          },
          "teacher_reference_number": {
            "description": "The Teacher Reference Number (TRN) for this participant",
            "type": "string",
            "example": "1234567"
          },
          "updated_at": {
            "description": "The date and time the ECF participant was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "ecf_enrolments": {
            "description": "Information about the course(s) the participant is enroled in",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECFEnrolment"
            }
          },
          "participant_id_changes": {
            "description": "Information about the Participant ID changes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantIdChange"
            }
          }
        }
      },
      "ECFParticipantChangeSchedule": {
        "description": "An ECF participant change schedule action",
        "type": "object",
        "properties": {
          "type": {
            "description": "The data type",
            "type": "string",
            "enum": [
              "participant-change-schedule"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFParticipantChangeScheduleAttributes"
          }
        },
        "required": [
          "type",
          "attributes"
        ],
        "example": {
          "type": "participant-change-schedule",
          "attributes": {
            "schedule_identifier": "ecf-standard-january",
            "course_identifier": "ecf-mentor"
          }
        }
      },
      "ECFParticipantChangeScheduleAttributes": {
        "description": "An ECF participant change schedule action",
        "type": "object",
        "properties": {
          "schedule_identifier": {
            "description": "The new schedule of the participant",
            "type": "string",
            "enum": [
              "ecf-standard-september",
              "ecf-standard-january",
              "ecf-standard-april",
              "ecf-reduced-september",
              "ecf-reduced-january",
              "ecf-reduced-april",
              "ecf-extended-september",
              "ecf-extended-january",
              "ecf-extended-april",
              "ecf-replacement-september",
              "ecf-replacement-january",
              "ecf-replacement-april"
            ],
            "example": "ecf-standard-september"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          },
          "cohort": {
            "description": "Providers may not change the current value for ECF participants. Indicates which call-off contract funds this participant's training. 2021 indicates a participant that has started, or will start, their training in the 2021/22 academic year.",
            "type": "string",
            "example": "2021"
          }
        },
        "required": [
          "schedule_identifier",
          "course_identifier"
        ],
        "example": {
          "schedule_identifier": "ecf-standard-january",
          "course_identifier": "ecf-mentor",
          "cohort": "2021"
        }
      },
      "ECFParticipantChangeScheduleRequest": {
        "description": "The change schedule request for a participant",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFParticipantChangeSchedule"
          }
        },
        "example": {
          "data": {
            "type": "participant-change-schedule",
            "attributes": {
              "schedule_identifier": "ecf-standard-january",
              "course_identifier": "ecf-mentor",
              "cohort": "2021"
            }
          }
        }
      },
      "ECFParticipantDeclarationPost2024ECTCompletedAttributesRequest": {
        "description": "An ECF completed participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "evidence_held"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "completed"
            ],
            "example": "completed"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction"
            ],
            "example": "ecf-induction"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "75-percent-engagement-met",
              "75-percent-engagement-met-reduced-induction",
              "one-term-induction"
            ],
            "example": "75-percent-engagement-met"
          }
        }
      },
      "ECFParticipantDeclarationPost2024ECTExtendedAttributesRequest": {
        "description": "An ECF extended participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "evidence_held"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "extended-1",
              "extended-2",
              "extended-3"
            ],
            "example": "extended-1"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction"
            ],
            "example": "ecf-induction"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "materials-engaged-with-offline",
              "other"
            ],
            "example": "training-event-attended"
          }
        }
      },
      "ECFParticipantDeclarationPost2024ECTRetainedAttributesRequest": {
        "description": "An ECF participant retained declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "evidence_held"
        ],
        "additionalProperties": false,
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "format": "uuid",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "retained-1",
              "retained-2",
              "retained-3",
              "retained-4"
            ],
            "example": "retained-1"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction"
            ],
            "example": "ecf-induction"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "materials-engaged-with-offline",
              "other",
              "<br>For retained-2 declarations, providers will need to confirm if the engagement threshold has been reached:",
              "75-percent-engagement-met",
              "75-percent-engagement-met-reduced-induction"
            ],
            "example": "training-event-attended"
          }
        }
      },
      "ECFParticipantDeclarationPost2024ECTStartedAttributesRequest": {
        "description": "An ECF started participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "started"
            ],
            "example": "started"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction"
            ],
            "example": "ecf-induction"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "materials-engaged-with-offline",
              "other"
            ],
            "example": "training-event-attended"
          }
        }
      },
      "ECFParticipantDeclarationPost2024MentorCompletedAttributesRequest": {
        "description": "An ECF completed participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "evidence_held"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "completed"
            ],
            "example": "completed"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-mentor"
            ],
            "example": "ecf-mentor"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "75-percent-engagement-met",
              "75-percent-engagement-met-reduced-induction"
            ],
            "example": "75-percent-engagement-met"
          }
        }
      },
      "ECFParticipantDeclarationPost2024MentorStartedAttributesRequest": {
        "description": "An ECF started participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "started"
            ],
            "example": "started"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-mentor"
            ],
            "example": "ecf-mentor"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "materials-engaged-with-offline",
              "other"
            ],
            "example": "training-event-attended"
          }
        }
      },
      "ECFParticipantDeclarationPre2025CompletedAttributesRequest": {
        "description": "An ECF completed participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "evidence_held"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "completed"
            ],
            "example": "completed"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "other"
            ],
            "example": "training-event-attended"
          }
        }
      },
      "ECFParticipantDeclarationPre2025ExtendedAttributesRequest": {
        "description": "An ECF extended participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "evidence_held"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "extended-1",
              "extended-2",
              "extended-3"
            ],
            "example": "extended-1"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "other"
            ],
            "example": "training-event-attended"
          }
        }
      },
      "ECFParticipantDeclarationPre2025RetainedAttributesRequest": {
        "description": "An ECF participant retained declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "evidence_held"
        ],
        "additionalProperties": false,
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "format": "uuid",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "retained-1",
              "retained-2",
              "retained-3",
              "retained-4"
            ],
            "example": "retained-1"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "other"
            ]
          }
        }
      },
      "ECFParticipantDeclarationPre2025StartedAttributesRequest": {
        "description": "An ECF started participant declaration",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique ID of the participant",
            "type": "string",
            "example": "3452b1a6-cbaa-422f-9ca9-40afa28583a2"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "started"
            ],
            "example": "started"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          }
        }
      },
      "ECFParticipantDefer": {
        "description": "The details of a participant deferral request",
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "participant-defer",
            "enum": [
              "participant-defer"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFParticipantDeferAttributes"
          }
        }
      },
      "ECFParticipantDeferAttributes": {
        "description": "An ECF participant deferral action",
        "type": "object",
        "required": [
          "reason",
          "course_identifier"
        ],
        "properties": {
          "reason": {
            "description": "The reason for the deferral",
            "type": "string",
            "enum": [
              "bereavement",
              "long-term-sickness",
              "parental-leave",
              "career-break",
              "other"
            ],
            "example": "career-break"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          }
        },
        "example": {
          "reason": "career-break",
          "course_identifier": "ecf-mentor"
        }
      },
      "ECFParticipantDeferRequest": {
        "description": "The deferral request for a participant",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFParticipantDefer"
          }
        },
        "example": {
          "data": {
            "type": "participant-defer",
            "attributes": {
              "reason": "career-break",
              "course_identifier": "ecf-mentor"
            }
          }
        }
      },
      "ECFParticipantFilter": {
        "description": "Filter a list of records to return more specific results",
        "type": "object",
        "properties": {
          "updated_since": {
            "description": "Return only records that have been updated since this date and time (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          },
          "cohort": {
            "description": "Return only records for the given cohort",
            "type": "string",
            "example": "2022"
          },
          "training_status": {
            "description": "Return only records that have this training status",
            "type": "string",
            "example": "active"
          },
          "from_participant_id": {
            "description": "Return only records that have this from Participant ID",
            "type": "string",
            "example": "439ac4fe-a003-417f-9694-07c45b3482f8"
          }
        }
      },
      "ECFParticipantJoining": {
        "description": "The details of an ECF Participant joining a school",
        "type": "object",
        "required": [
          "school_urn",
          "provider",
          "date"
        ],
        "properties": {
          "school_urn": {
            "description": "The URN of the school the participant is joining",
            "type": "string",
            "example": 123456
          },
          "provider": {
            "description": "The name of the provider the participant is joining",
            "type": "string",
            "example": "Example Institute"
          },
          "date": {
            "description": "The date the participant will be joining the school",
            "type": "string",
            "format": "date",
            "example": "2021-05-31"
          }
        },
        "example": {
          "school_urn": 123456,
          "provider": "Example Institute",
          "date": "2021-05-31"
        }
      },
      "ECFParticipantLeaving": {
        "description": "The details of an ECF Participant leaving a school",
        "type": "object",
        "required": [
          "school_urn",
          "provider"
        ],
        "properties": {
          "school_urn": {
            "description": "The URN of the school the participant is leaving",
            "type": "string",
            "example": 123456
          },
          "provider": {
            "description": "The name of the provider the participant is leaving",
            "type": "string",
            "example": "Example Institute"
          },
          "date": {
            "description": "The date the participant will be leaving the school",
            "type": "string",
            "format": "date",
            "example": "2021-05-31"
          }
        },
        "example": {
          "school_urn": 123456,
          "provider": "Example Institute",
          "date": "2021-05-31"
        }
      },
      "ECFParticipantResponse": {
        "description": "An ECF Participant",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFParticipant"
          }
        }
      },
      "ECFParticipantResume": {
        "description": "An ECF participant resume action",
        "type": "object",
        "properties": {
          "type": {
            "description": "The data type",
            "type": "string",
            "enum": [
              "participant-resume"
            ],
            "example": "participant-resume"
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFParticipantResumeAttributes"
          }
        },
        "required": [
          "type",
          "attributes"
        ]
      },
      "ECFParticipantResumeAttributes": {
        "description": "An ECF participant resume action",
        "type": "object",
        "properties": {
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          }
        },
        "required": [
          "course_identifier"
        ],
        "example": {
          "course_identifier": "ecf-mentor"
        }
      },
      "ECFParticipantResumeRequest": {
        "description": "The resume request for a participant",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFParticipantResume"
          }
        },
        "example": {
          "data": {
            "type": "participant-resume",
            "attributes": {
              "course_identifier": "ecf-mentor"
            }
          }
        }
      },
      "ECFParticipantTransfer": {
        "description": "<b>Note, this is a new endpoint.</b><br/> The details of an ECF participant transfer",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the participant record",
            "type": "string",
            "format": "uuid",
            "example": "db3a7848-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "participant-transfer"
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFParticipantTransferAttributes"
          }
        }
      },
      "ECFParticipantTransferAttributes": {
        "description": "The data attributes associated with an ECF participant transfer",
        "type": "object",
        "required": [
          "updated_at",
          "transfers"
        ],
        "properties": {
          "updated_at": {
            "description": "The date and time the latest ECF participant was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "transfers": {
            "description": "List of participant transfers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECFParticipantTransfers"
            }
          }
        }
      },
      "ECFParticipantTransferResponse": {
        "description": "An ECF participant transfer",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFParticipantTransfer"
          }
        }
      },
      "ECFParticipantTransfers": {
        "description": "The details of an ECF Participant enrolment",
        "type": "object",
        "required": [
          "training_record_id",
          "transfer_type",
          "status",
          "created_at"
        ],
        "properties": {
          "training_record_id": {
            "description": "The unique identifier of the participant training record",
            "type": "string",
            "format": "uuid",
            "example": "000a97ff-d2a9-4779-a397-9bfd9063072e"
          },
          "transfer_type": {
            "description": "The type of transfer between schools",
            "type": "string",
            "example": "new_provider",
            "enum": [
              "new_school",
              "new_provider",
              "unknown"
            ]
          },
          "status": {
            "description": "The status of the transfer, if both leaving and joining SIT have completed their journeys or only one has",
            "type": "string",
            "example": "complete",
            "enum": [
              "incomplete",
              "complete"
            ]
          },
          "leaving": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/ECFParticipantLeaving"
              }
            ]
          },
          "joining": {
            "nullable": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/ECFParticipantJoining"
              }
            ]
          },
          "created_at": {
            "description": "The date and time the ECF participant transfer was created",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        }
      },
      "ECFParticipantWithdraw": {
        "description": "An ECF participant withdrawal action",
        "type": "object",
        "properties": {
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "participant-withdraw",
            "enum": [
              "participant-withdraw"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFParticipantWithdrawAttributes"
          }
        }
      },
      "ECFParticipantWithdrawAttributes": {
        "description": "An ECF participant withdrawal action",
        "type": "object",
        "properties": {
          "reason": {
            "description": "The reason for the withdrawal",
            "type": "string",
            "enum": [
              "left-teaching-profession",
              "moved-school",
              "mentor-no-longer-being-mentor",
              "school-left-fip",
              "other"
            ],
            "example": "left-teaching-profession"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          }
        },
        "required": [
          "reason",
          "course_identifier"
        ],
        "example": {
          "reason": "left-teaching-profession",
          "course_identifier": "ecf-mentor"
        }
      },
      "ECFParticipantWithdrawRequest": {
        "description": "The withdrawal request for a participant",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFParticipantWithdraw"
          }
        },
        "example": {
          "data": {
            "type": "participant-withdraw",
            "attributes": {
              "reason": "left-teaching-profession",
              "course_identifier": "ecf-mentor"
            }
          }
        }
      },
      "ECFParticipantsSort": {
        "description": "Sort ECF participants being returned",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "created_at",
            "-created_at",
            "updated_at",
            "-updated_at"
          ]
        }
      },
      "ECFPartnership": {
        "description": "An ECF partnership",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the partnership",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "partnership"
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFPartnershipAttributes"
          }
        }
      },
      "ECFPartnershipAttibutesRequest": {
        "type": "object",
        "required": [
          "cohort",
          "delivery_partner_id",
          "school_id"
        ],
        "properties": {
          "cohort": {
            "description": "The cohort for which you are reporting the partnership",
            "type": "string",
            "example": 2021
          },
          "delivery_partner_id": {
            "description": "The unique ID of the delivery partner you will work with for this school partnership",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "school_id": {
            "description": "The Unique ID of the school you are partnering with",
            "type": "string",
            "format": "uuid",
            "example": "dd4s12347-7308-4879-942a-c4a70ced400a"
          }
        }
      },
      "ECFPartnershipAttributes": {
        "description": "The data attributes associated with an ECF partnership",
        "type": "object",
        "required": [
          "cohort",
          "school_id",
          "urn",
          "delivery_partner_id",
          "status",
          "updated_at",
          "created_at"
        ],
        "properties": {
          "cohort": {
            "description": "The cohort for which you are reporting the partnership",
            "type": "string",
            "example": 2021
          },
          "urn": {
            "description": "The Unique Reference Number (URN) of the school you are partnered with",
            "type": "string",
            "example": "123456"
          },
          "school_id": {
            "description": "The unique ID of the school you are partnered with",
            "type": "string",
            "format": "uuid",
            "example": "dd4a11347-7308-4879-942a-c4a70ced400v"
          },
          "delivery_partner_id": {
            "description": "The unique ID of the delivery partner you are working with for this partnership",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "delivery_partner_name": {
            "description": "The name of the delivery partner you are working with for this partnership",
            "type": "string",
            "example": "Delivery Partner Example"
          },
          "status": {
            "description": "The status of the partnership which includes active or challenged",
            "type": "string",
            "enum": [
              "active",
              "challenged"
            ],
            "example": "challenged"
          },
          "challenged_reason": {
            "description": "If the partnership has been challenged, the reason provided for the challenge by the SIT",
            "type": "string",
            "nullable": true,
            "enum": [
              "another_provider",
              "not_confirmed",
              "do_not_recognise",
              "no_ects",
              "mistake"
            ],
            "example": "mistake"
          },
          "challenged_at": {
            "description": "The date the partnership has been challenged",
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "induction_tutor_name": {
            "description": "The name of the induction tutor at the school you are in partnership with",
            "type": "string",
            "nullable": true,
            "example": "John Doe"
          },
          "induction_tutor_email": {
            "description": "The email address of the induction tutor at the school you are in partnership with",
            "type": "string",
            "example": "john.doe@example.com"
          },
          "updated_at": {
            "description": "The date the partnership was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "created_at": {
            "description": "The date the partnership was reported by you",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        }
      },
      "ECFPartnershipDataRequest": {
        "description": "An ECF partnership",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ecf-partnership"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFPartnershipAttibutesRequest"
          }
        }
      },
      "ECFPartnershipRequest": {
        "description": "An ECF partnership",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFPartnershipDataRequest"
          }
        },
        "example": {
          "data": {
            "type": "ecf-partnership",
            "attributes": {
              "cohort": "2021",
              "school_id": "24b61d1c-ad95-4000-aee0-afbdd542294a",
              "delivery_partner_id": "db2fbf67-b7b7-454f-a1b7-0020411e2314"
            }
          }
        }
      },
      "ECFPartnershipRequestErrorResponse": {
        "description": "A list of errors",
        "type": "object",
        "properties": {
          "error": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UrnInvalidError"
                },
                {
                  "$ref": "#/components/schemas/PartnershipExistsError"
                },
                {
                  "$ref": "#/components/schemas/SchoolFundingError"
                },
                {
                  "$ref": "#/components/schemas/DeliveryPartnerCohortError"
                },
                {
                  "$ref": "#/components/schemas/OtherProviderRecruitedError"
                }
              ]
            }
          }
        }
      },
      "ECFPartnershipResponse": {
        "description": "An ECF partnership",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFPartnership"
          }
        }
      },
      "ECFPartnershipUpdateAttibutesRequest": {
        "type": "object",
        "required": [
          "delivery_partner_id"
        ],
        "properties": {
          "delivery_partner_id": {
            "description": "The unique ID of the delivery partner you will work with for this school partnership",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          }
        }
      },
      "ECFPartnershipUpdateDataRequest": {
        "description": "Update An ECF partnership",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ecf-partnership-update"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFPartnershipUpdateAttibutesRequest"
          }
        }
      },
      "ECFPartnershipUpdateRequest": {
        "description": "Update an ECF partnership",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFPartnershipUpdateDataRequest"
          }
        },
        "example": {
          "data": {
            "type": "ecf-partnership-update",
            "attributes": {
              "delivery_partner_id": "db2fbf67-b7b7-454f-a1b7-0020411e2314"
            }
          }
        }
      },
      "ECFSchool": {
        "description": "An ECF school",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the school",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "school"
          },
          "attributes": {
            "$ref": "#/components/schemas/ECFSchoolAttributes"
          }
        }
      },
      "ECFSchoolAttributes": {
        "description": "The data attributes associated with an ECF school",
        "type": "object",
        "required": [
          "name",
          "urn",
          "cohort",
          "in_partnership",
          "induction_programme_choice",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "name": {
            "description": "The name of the school",
            "type": "string",
            "example": "School Example"
          },
          "urn": {
            "description": "The Unique Reference Number (URN) of the school",
            "type": "string",
            "example": "123456"
          },
          "cohort": {
            "description": "Indicates which call-off contract funds this participant's training. 2021 indicates a participant that has started, or will start, their training in the 2021/22 academic year.",
            "type": "string",
            "example": 2021
          },
          "in_partnership": {
            "description": "Whether or not the school already has an active partnership, if it is doing a funded induction programme",
            "type": "boolean",
            "example": false
          },
          "induction_programme_choice": {
            "description": "The induction programme the school offers",
            "type": "string",
            "example": "not_yet_known",
            "enum": [
              "core_induction_programme",
              "full_induction_programme",
              "design_our_own",
              "school_funded_fip",
              "no_early_career_teachers",
              "not_yet_known"
            ]
          },
          "created_at": {
            "description": "The date and time the school was created",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "updated_at": {
            "description": "The last time a change was made to this school record by the DfE",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        }
      },
      "ECFSchoolResponse": {
        "description": "A single ECF school",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ECFSchool"
          }
        }
      },
      "ECFSchoolsFilter": {
        "description": "Filter schools to return more specific results",
        "type": "object",
        "properties": {
          "cohort": {
            "description": "Return schools within the specified cohort.",
            "type": "string",
            "example": "2021"
          },
          "urn": {
            "description": "Return a school with the specified Unique Reference Number (URN).",
            "type": "string",
            "example": "106286"
          },
          "updated_since": {
            "description": "Return only records that have been updated since this date and time (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          }
        }
      },
      "ECFSchoolsSort": {
        "description": "Sort schools being returned",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "updated_at",
            "-updated_at"
          ]
        }
      },
      "ECFUnfundedMentorsSort": {
        "description": "Sort unfunded mentors being returned.",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "updated_at",
            "-updated_at"
          ]
        }
      },
      "ECFWithdrawal": {
        "description": "The details of an ECF Participant withdrawal",
        "type": "object",
        "required": [
          "reason",
          "date"
        ],
        "properties": {
          "reason": {
            "description": "The reason a participant was withdrawn",
            "type": "string",
            "example": "moved-school",
            "enum": [
              "left-teaching-profession",
              "moved-school",
              "mentor-no-longer-being-mentor",
              "school-left-fip",
              "other"
            ]
          },
          "date": {
            "description": "The date and time the participant was withdrawn",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        },
        "example": {
          "reason": "moved-school",
          "date": "2021-05-31T02:22:32.000Z"
        }
      },
      "Error": {
        "description": "An single error element",
        "type": "object",
        "properties": {
          "title": {
            "description": "A title of the error",
            "type": "string"
          },
          "detail": {
            "description": "Additional details of the error",
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "description": "A list of errors",
        "type": "object",
        "properties": {
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ListFilter": {
        "description": "Filter a list of records to return more specific results",
        "type": "object",
        "properties": {
          "updated_since": {
            "description": "Return only records that have been updated since this date and time (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          }
        }
      },
      "ListFilterDeclarations": {
        "description": "Filter a list of declarations records to return more specific results",
        "type": "object",
        "properties": {
          "updated_since": {
            "description": "Return only records that have been updated since this date and time (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          },
          "participant_id": {
            "description": "The unique id of the participant",
            "type": "string",
            "example": "ab3a7848-1208-7679-942a-b4a70eed400a"
          }
        }
      },
      "MultipleECFParticipantTransferResponse": {
        "description": "A list of ECF participant transfers",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECFParticipantTransfer"
            },
            "example": [
              {
                "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                "type": "participant-transfer",
                "attributes": {
                  "updated_at": "2021-05-31T02:22:32.000Z",
                  "transfers": {
                    "training_record_id": "000a97ff-d2a9-4779-a397-9bfd9063072e",
                    "transfer_type": "new_provider",
                    "status": "complete",
                    "leaving": {
                      "school_urn": "123456",
                      "provider": "Old Institute",
                      "date": "2021-05-31"
                    },
                    "joining": {
                      "school_urn": "654321",
                      "provider": "New Institute",
                      "date": "2021-06-01"
                    },
                    "created_at": "2021-05-31T02:22:32.000Z"
                  }
                }
              },
              {
                "id": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
                "type": "participant-transfer",
                "attributes": {
                  "updated_at": "2021-05-31T02:22:32.000Z",
                  "transfers": {
                    "training_record_id": "000a97ff-d2a9-4779-a397-9bfd9063072e",
                    "transfer_type": "new_provider",
                    "status": "complete",
                    "leaving": {
                      "school_urn": "123456",
                      "provider": "Old Institute",
                      "date": "2021-05-31"
                    },
                    "joining": {
                      "school_urn": "654321",
                      "provider": "New Institute",
                      "date": "2021-06-01"
                    },
                    "created_at": "2021-05-31T02:22:32.000Z"
                  }
                }
              }
            ]
          }
        }
      },
      "MultipleECFParticipantsResponse": {
        "description": "A list of ECF participants",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECFParticipant"
            }
          }
        }
      },
      "MultipleECFPartnershipsResponse": {
        "description": "A list of ECF partnerships",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECFPartnership"
            }
          }
        }
      },
      "MultipleECFSchoolsResponse": {
        "description": "A list of schools for the given cohort",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECFSchool"
            }
          }
        }
      },
      "MultipleParticipantDeclarationsResponse": {
        "description": "A list of participant declarations",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantDeclarationResponse"
            },
            "example": [
              {
                "id": "01017c12-354b-4b2d-b621-3531ab729c43",
                "type": "participant-declaration",
                "attributes": {
                  "participant_id": "db3a7848-7308-4879-942a-c4a70ced400a",
                  "declaration_type": "started",
                  "declaration_date": "2021-05-31T02:21:32.000Z",
                  "course_identifier": "ecf-mentor"
                }
              },
              {
                "id": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
                "type": "participant-declaration",
                "attributes": {
                  "participant_id": "ab3a7848-7308-4879-942a-c4a70ced400a",
                  "declaration_type": "started",
                  "declaration_date": "2021-05-31T02:21:32.000Z",
                  "course_identifier": "ecf-mentor"
                }
              }
            ]
          }
        }
      },
      "MultipleUnfundedMentorsResponse": {
        "description": "A list of unfunded mentors",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnfundedMentor"
            }
          }
        }
      },
      "NotFoundResponse": {
        "description": "The requested resource was not found",
        "type": "object",
        "properties": {
          "title": {
            "description": "The title of the error message",
            "type": "string"
          },
          "detail": {
            "description": "Further information regarding the error",
            "type": "string"
          }
        },
        "example": {
          "errors": [
            {
              "title": "The requested resource was not found",
              "detail": "Nothing could be found for the provided details"
            }
          ]
        }
      },
      "OtherProviderRecruitedError": {
        "description": "Recruited by other provider",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of error message",
            "type": "string",
            "enum": [
              "Recruited by other provider"
            ],
            "example": "Recruited by other provider"
          },
          "detail": {
            "description": "Additional info",
            "type": "string",
            "example": "This partnership cannot be created as it has already partnered with another provider"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "description": "This schema used to paginate through a collection.",
        "properties": {
          "page": {
            "type": "integer",
            "description": "The page number to paginate to in the collection. If no value is specified it defaults to the first page.",
            "example": 3
          },
          "per_page": {
            "type": "integer",
            "description": "The number items to display on a page. Defaults to 100. Maximum is 3000, if the value is greater that the maximum allowed it will fallback to 3000.",
            "example": 10
          }
        }
      },
      "ParticipantDeclarationAttributes": {
        "description": "The data attributes associated with a participant declaration response",
        "type": "object",
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date",
          "course_identifier",
          "state",
          "updated_at",
          "lead_provider_name"
        ],
        "properties": {
          "participant_id": {
            "description": "The unique id of the participant",
            "type": "string",
            "format": "uuid",
            "example": "db3a7848-7308-4879-942a-c4a70ced400a"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "started",
              "retained-1",
              "retained-2",
              "retained-3",
              "retained-4",
              "completed",
              "extended-1",
              "extended-2",
              "extended-3"
            ],
            "example": "started"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          },
          "course_identifier": {
            "description": "The type of course the participant is enrolled in",
            "type": "string",
            "enum": [
              "ecf-induction",
              "ecf-mentor"
            ],
            "example": "ecf-induction"
          },
          "state": {
            "description": "Indicates the state of this payment declaration",
            "type": "string",
            "enum": [
              "submitted",
              "eligible",
              "payable",
              "paid",
              "voided",
              "ineligible",
              "awaiting-clawback",
              "clawed-back"
            ],
            "example": "submitted"
          },
          "updated_at": {
            "description": "The date the declaration was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "created_at": {
            "description": "The date the declaration was created",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "delivery_partner_id": {
            "description": "Unique ID of the delivery partner associated with the participant at the time the declaration was created",
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "statement_id": {
            "description": "Unique ID of the statement the declaration will be paid as part of",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a",
            "nullable": true
          },
          "clawback_statement_id": {
            "description": "Unique id of the statement to which the declaration will be clawed back on, if any",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a",
            "nullable": true
          },
          "ineligible_for_funding_reason": {
            "description": "If the declaration is ineligible, the reason why",
            "type": "string",
            "enum": [
              "duplicate_declaration"
            ],
            "nullable": true,
            "example": "duplicate_declaration"
          },
          "mentor_id": {
            "description": "Unique ID of the ECT's mentor",
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "uplift_paid": {
            "description": "If participant is eligible for uplift, whether it has been paid as part of this declaration",
            "type": "boolean",
            "example": true
          },
          "evidence_held": {
            "description": "The type of evidence that the lead provider holds on their platform to demonstrate that the participant has met the retention criteria for the current milestone period",
            "type": "string",
            "enum": [
              "training-event-attended",
              "self-study-material-completed",
              "other",
              "<br>For cohort 2025, depending on the declaration type the new possible values are:",
              "training-event-attended",
              "self-study-material-completed",
              "other",
              "materials-engaged-with-offline",
              "75-percent-engagement-met",
              "75-percent-engagement-met-reduced-induction",
              "one-term-induction"
            ],
            "nullable": true
          },
          "has_passed": {
            "description": "Whether the participant has failed or passed",
            "type": "boolean",
            "example": "nil",
            "nullable": true
          },
          "lead_provider_name": {
            "description": "The name of the provider that submitted the declaration",
            "type": "string",
            "example": "Example Institute"
          }
        }
      },
      "ParticipantDeclarationPost2024ECTDataRequest": {
        "description": " A participant declaration data request for ECT participants from cohort 2025 onwards",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "participant-declaration"
            ]
          },
          "attributes": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPost2024ECTStartedAttributesRequest"
              },
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPost2024ECTRetainedAttributesRequest"
              },
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPost2024ECTCompletedAttributesRequest"
              },
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPost2024ECTExtendedAttributesRequest"
              }
            ]
          }
        }
      },
      "ParticipantDeclarationPost2024MentorDataRequest": {
        "description": "A participant declaration data request for mentor participants from cohort 2025 onwards",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "participant-declaration"
            ]
          },
          "attributes": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPost2024MentorStartedAttributesRequest"
              },
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPost2024MentorCompletedAttributesRequest"
              }
            ]
          }
        }
      },
      "ParticipantDeclarationPre2025DataRequest": {
        "description": "A participant declaration data request for participants in cohort 2024 and previous years",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "participant-declaration"
            ]
          },
          "attributes": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPre2025StartedAttributesRequest"
              },
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPre2025RetainedAttributesRequest"
              },
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPre2025CompletedAttributesRequest"
              },
              {
                "$ref": "#/components/schemas/ECFParticipantDeclarationPre2025ExtendedAttributesRequest"
              }
            ]
          }
        }
      },
      "ParticipantDeclarationRequest": {
        "description": "An participant declaration request",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParticipantDeclarationPre2025DataRequest"
              },
              {
                "$ref": "#/components/schemas/ParticipantDeclarationPost2024ECTDataRequest"
              },
              {
                "$ref": "#/components/schemas/ParticipantDeclarationPost2024MentorDataRequest"
              }
            ]
          }
        }
      },
      "ParticipantDeclarationResponse": {
        "description": "A participant declaration response",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the participant declaration record",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "participant-declaration"
          },
          "attributes": {
            "$ref": "#/components/schemas/ParticipantDeclarationAttributes"
          }
        }
      },
      "ParticipantDeclarationsFilter": {
        "description": "Filter participant declarations to return more specific results",
        "type": "object",
        "properties": {
          "cohort": {
            "description": "Return participant declarations associated to the specified cohort or cohorts. This is a comma delimited string of years.",
            "type": "string",
            "example": [
              20212022
            ]
          },
          "participant_id": {
            "description": "Return participant declarations associated to the specified participant ID. This is a comma delimited string where multiple participant IDs can be specified",
            "type": "string",
            "example": "e43f6122-53bb-4843-ae2e-d1ae51cb8a04,96944322-3040-4ebd-9f9d-b6e5cf422f39"
          },
          "updated_since": {
            "description": "Return only records that have been updated since this date and time (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          },
          "delivery_partner_id": {
            "description": "Return participant declarations associated to the specified delivery partner or delivery partners. This is a comma delimited string of delivery partner IDs.",
            "type": "string",
            "example": "42a9ef2f-9059-400a-92ff-4830a629d0c5,92f6e54b-57fe-4a62-89cc-e83d6b0f734b"
          }
        }
      },
      "ParticipantIdChange": {
        "description": "The details of an Participant ID change",
        "type": "object",
        "required": [
          "from_participant_id",
          "to_participant_id",
          "changed_at"
        ],
        "properties": {
          "from_participant_id": {
            "description": "The unique identifier of the changed from participant training record.",
            "type": "string",
            "format": "uuid",
            "example": "23dd8d66-e11f-4139-9001-86b4f9abcb02"
          },
          "to_participant_id": {
            "description": "The unique identifier of the changed to participant training record.",
            "type": "string",
            "format": "uuid",
            "example": "ac3d1243-7308-4879-942a-c4a70ced400a"
          },
          "changed_at": {
            "description": "The date and time the Participant ID change",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        },
        "example": {
          "from_participant_id": "23dd8d66-e11f-4139-9001-86b4f9abcb02",
          "to_participant_id": "ac3d1243-7308-4879-942a-c4a70ced400a",
          "changed_at": "2021-05-31T02:22:32.000Z"
        }
      },
      "PartnershipExistsError": {
        "description": "Partnership already exists",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of error message",
            "type": "string",
            "enum": [
              "Partnership already exists"
            ],
            "example": "Partnership already exists"
          },
          "detail": {
            "description": "Additional info about existing partnership",
            "type": "string",
            "example": "Partnership with school 123456 for cohort 2022 and delivery partner d1027b7f-664d-48bb-8b9f-c378116d8a16 already exists"
          }
        }
      },
      "PartnershipsFilter": {
        "description": "Filter partnerships to return more specific results",
        "type": "object",
        "properties": {
          "cohort": {
            "description": "Return partnerships within the specified cohorts. This is a comma delimited string of years.",
            "type": "string",
            "example": "2021,2022"
          },
          "updated_since": {
            "description": "Return only partnerships that have been updated since this date and time (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          },
          "delivery_partner_id": {
            "description": "Return partnerships associated to the specified delivery partner or delivery partners. This is a comma delimited string of delivery partner IDs.",
            "type": "string",
            "example": "42a9ef2f-9059-400a-92ff-4830a629d0c5,92f6e54b-57fe-4a62-89cc-e83d6b0f734b"
          }
        }
      },
      "PartnershipsSort": {
        "description": "Sort partnerships being returned",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "created_at",
            "-created_at",
            "updated_at",
            "-updated_at"
          ]
        }
      },
      "SchoolFundingError": {
        "description": "School is not eligible for DfE-funded FIP",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of error message",
            "type": "string",
            "enum": [
              "School is not eligible for DfE-funded FIP"
            ],
            "example": "School is not eligible for DfE-funded FIP"
          },
          "detail": {
            "description": "Additional info why school is not for DfE-funded FIP if any",
            "type": "string"
          }
        }
      },
      "SingleParticipantDeclarationResponse": {
        "description": "A confirmation that the participant declaration has been recorded successfully",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ParticipantDeclarationResponse"
          }
        }
      },
      "Statement": {
        "description": "A financial statement",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the financial statement",
            "type": "string",
            "format": "uuid",
            "example": "cd3a12347-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "statement"
          },
          "attributes": {
            "$ref": "#/components/schemas/StatementAttributes"
          }
        }
      },
      "StatementAttributes": {
        "description": "The data attributes associated with a financial statement",
        "type": "object",
        "properties": {
          "month": {
            "description": "The month which appears on the statement in the DfE portal",
            "type": "string",
            "nullable": false,
            "example": "May"
          },
          "year": {
            "description": "The calendar year which appears on the statement in the dfe portal",
            "type": "string",
            "nullable": false,
            "example": "2022"
          },
          "type": {
            "description": "Type of statement",
            "type": "string",
            "nullable": false,
            "enum": [
              "ecf"
            ],
            "example": "ecf"
          },
          "cohort": {
            "description": "The cohort - 2021 or 2022 - which the statement funds",
            "type": "string",
            "nullable": false,
            "example": "2021"
          },
          "cut_off_date": {
            "description": "The milestone cut off or review point for the statement",
            "type": "string",
            "nullable": false,
            "example": "2022-04-30"
          },
          "payment_date": {
            "description": "The date we expect to pay you for any declarations attached to the statement, which are eligible for payment",
            "type": "string",
            "nullable": false,
            "example": "2022-05-25"
          },
          "paid": {
            "description": "Indicates whether the DfE has paid providers for any declarations attached to the statement",
            "type": "boolean",
            "nullable": false,
            "example": true
          },
          "created_at": {
            "description": "The date the statement was created",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "updated_at": {
            "description": "The date the statement was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        }
      },
      "StatementResponse": {
        "description": "A single financial statement",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Statement"
          }
        }
      },
      "StatementsFilter": {
        "description": "Filter statements to return more specific results",
        "type": "object",
        "properties": {
          "cohort": {
            "description": "Return statements associated to the specified cohort or cohorts. This is a comma delimited string of years.",
            "type": "string",
            "example": [
              20212022
            ]
          },
          "type": {
            "description": "Return statements of a given type",
            "type": "string",
            "enum": [
              "ecf"
            ],
            "example": "ecf"
          },
          "updated_since": {
            "description": "Return only records that have been updated since this date and time (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          }
        }
      },
      "StatementsResponse": {
        "description": "A list of financial statements",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "UnauthorisedResponse": {
        "description": "Authorization information is missing or invalid",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "HTTP Token: Access denied"
          }
        }
      },
      "UnfundedMentor": {
        "description": "<b>Note, this is a new endpoint.</b><br/>The details of an unfunded mentor",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the mentor record",
            "type": "string",
            "format": "uuid",
            "example": "db3a7848-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "unfunded-mentor"
          },
          "attributes": {
            "$ref": "#/components/schemas/UnfundedMentorAttributes"
          }
        }
      },
      "UnfundedMentorAttributes": {
        "description": "The data attributes associated with an unfunded mentor",
        "type": "object",
        "required": [
          "full_name",
          "email",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "full_name": {
            "description": "The full name of this mentor",
            "type": "string",
            "example": "Jane Smith"
          },
          "email": {
            "description": "The email address registered for this unfunded mentor",
            "type": "string",
            "example": "jane.smith@some-school.example.com"
          },
          "teacher_reference_number": {
            "description": "The Teacher Reference Number (TRN) for this participant",
            "type": "string",
            "example": "1234567"
          },
          "created_at": {
            "description": "The date and time the unfunded mentor was created",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          },
          "updated_at": {
            "description": "The date and time the unfunded mentor was last updated",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:22:32.000Z"
          }
        }
      },
      "UnfundedMentorResponse": {
        "description": "An unfunded mentor",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnfundedMentor"
          }
        }
      },
      "UrnInvalidError": {
        "description": "URN entered is not valid",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of error message",
            "type": "string",
            "enum": [
              "URN is not valid"
            ],
            "example": "URN is not valid"
          },
          "detail": {
            "description": "Additional info why URN is not valid",
            "type": "string",
            "example": "URN must is at most 6 digits long"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}