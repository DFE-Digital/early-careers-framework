{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "Manage teacher CPD - lead provider API",
    "contact": {
      "name": "DfE",
      "email": "continuing-professional-development@digital.education.gov.uk"
    },
    "description": "The lead provider API for DfE's manage teacher CPD service"
  },
  "servers": [
    {
      "url": "https://manage-training-for-early-career-teachers.education.gov.uk",
      "description": "Production url"
    },
    {
      "url": "https://ecf-sandbox.london.cloudapps.digital",
      "description": "Sandbox url"
    },
    {
      "url": "/",
      "description": "Current environment url"
    }
  ],
  "paths": {
    "/api/v1/npq-applications": {
      "get": {
        "summary": "Returns all NPQ applications for current lead provider",
        "operationId": "api_v1_npq_applications_index",
        "tags": [
          "npq_applications"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "description": "This schema is used to search within collections to return more specific results.",
              "example": {
                "updated_since": "2020-11-13T11:21:55Z"
              },
              "properties": {
                "updated_since": {
                  "description": "Return participants that have been updated since the specified timestamp (ISO 8601 format)",
                  "type": "string",
                  "example": "2021-05-13T11:21:55Z"
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine NPQ applications to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object",
              "description": "This schema used to paginate through a collection.",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "The page number to paginate to in the collection. If no value is specified it defaults to the first page.",
                  "example": 3
                },
                "per_page": {
                  "type": "integer",
                  "description": "The number items to display on a page. Defaults to 100. Maximum is 500, if the value is greater that the maximum allowed it will fallback to 100.",
                  "example": 10
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": {
              "page": 1,
              "per_page": 5
            },
            "description": "Pagination options to navigate through the collection."
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of NPQ applications.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "required": [
                              "id",
                              "participant_id",
                              "full_name",
                              "email",
                              "email_validated",
                              "teacher_reference_number",
                              "teacher_reference_number_validated",
                              "school_urn",
                              "headteacher_status",
                              "eligible_for_funding",
                              "funding_choice",
                              "course_identifier"
                            ],
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "participant_id": {
                                "type": "string"
                              },
                              "full_name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "email_validated": {
                                "type": "boolean"
                              },
                              "teacher_reference_number": {
                                "type": "string"
                              },
                              "teacher_reference_number_validated": {
                                "type": "boolean"
                              },
                              "school_urn": {
                                "type": "string"
                              },
                              "headteacher_status": {
                                "type": "string",
                                "enum": [
                                  "no",
                                  "yes_when_course_starts",
                                  "yes_in_first_two_years",
                                  "yes_over_two_years"
                                ]
                              },
                              "eligible_for_funding": {
                                "type": "boolean"
                              },
                              "funding_choice": {
                                "type": "string",
                                "enum": [
                                  "school",
                                  "trust",
                                  "self",
                                  "another"
                                ]
                              },
                              "course_identifier": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/npq-applications.csv": {
      "get": {
        "summary": "Returns all NPQ applications for the current lead provider",
        "operationId": "api_v1_npq_applications_index_csv",
        "tags": [
          "npq_applications"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "example": "",
              "description": "This schema is used to search within collections to return more specific results.",
              "properties": {
                "updated_since": {
                  "description": "Return participants that have been updated since the specified timestamp (ISO 8601 format)",
                  "type": "string",
                  "example": "2021-05-13T11:21:55Z"
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine NPQ applications to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of participants.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/participant-declarations": {
      "post": {
        "summary": "Declare a participant has reached a milestone",
        "operationId": "participant_declarations",
        "tags": [
          "participant_declarations"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantDeclaration"
              }
            }
          }
        },
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParticipantDeclarationRecordedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Bad or Missing parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadOrMissingParametersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/participants": {
      "get": {
        "summary": "Retrieve multiple participants",
        "operationId": "participants",
        "tags": [
          "participant"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParticipantFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine participants to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": {
              "page": 1,
              "per_page": 5
            },
            "description": "Pagination options to navigate through the collection."
          }
        ],
        "responses": {
          "200": {
            "description": "An array of participants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleParticipantResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/participants.csv": {
      "get": {
        "summary": "Retrieve multiple participants in CSV format",
        "operationId": "participants_csv",
        "tags": [
          "participant"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ParticipantFilter"
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine participants to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A CSV file of participants",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleParticipantCsvResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorisedResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "string",
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "BadOrMissingParametersResponse": {
        "description": "Request was missing data or contained invalid data",
        "type": "object",
        "required": [
          "bad_or_missing_parameters"
        ],
        "properties": {
          "bad_or_missing_parameters": {
            "description": "An error message for each bad or missing attribute describing the problems",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "example": [
              "participant_id",
              "declaration_date",
              "declaration_type"
            ]
          }
        }
      },
      "MultipleParticipantCsvResponse": {
        "description": "A list of participants in the Comma Separated Value (CSV) format",
        "type": "string",
        "format": "base64",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParticipantCsvRow"
            }
          }
        },
        "example": "id,type,email,full_name,mentor_id,school_urn,participant_type,cohort,status\ndb3a7848-7308-4879-942a-c4a70ced400a,participant,jane.smith@some-school.example.com,Jane Smith,bb36d74a-68a7-47b6-86b6-1fd0d141c590,106286,ect,2021,active\nbb36d74a-68a7-47b6-86b6-1fd0d141c590,participant,martin.jones@some-school.example.com,Martin Jones,,106286,mentor,2021,active\n"
      },
      "MultipleParticipantResponse": {
        "description": "A list of participants",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            },
            "example": [
              {
                "id": "db3a7848-7308-4879-942a-c4a70ced400a",
                "type": "participant",
                "attributes": {
                  "email": "jane.smith@some-school.example.com",
                  "full_name": "Jane Smith",
                  "mentor_id": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
                  "school_urn": "106286",
                  "participant_type": "ect",
                  "cohort": "2021",
                  "status": "active"
                }
              },
              {
                "id": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
                "type": "participant",
                "attributes": {
                  "email": "martin.jones@some-school.example.com",
                  "full_name": "Martin jones",
                  "school_urn": "106286",
                  "participant_type": "mentor",
                  "cohort": "2021",
                  "status": "active"
                }
              }
            ]
          }
        }
      },
      "Pagination": {
        "type": "object",
        "description": "This schema used to paginate through a collection.",
        "properties": {
          "page": {
            "type": "integer",
            "description": "The page number to paginate to in the collection. If no value is specified it defaults to the first page.",
            "example": 3
          },
          "per_page": {
            "type": "integer",
            "description": "The number items to display on a page. Defaults to 100. Maximum is 500, if the value is greater that the maximum allowed it will fallback to 500.",
            "example": 10
          }
        }
      },
      "Participant": {
        "description": "The details of a participant",
        "type": "object",
        "required": [
          "id",
          "type",
          "attributes"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the participant record",
            "type": "string",
            "format": "uuid",
            "example": "db3a7848-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "participant"
          },
          "attributes": {
            "$ref": "#/components/schemas/ParticipantAttributes"
          }
        }
      },
      "ParticipantAttributes": {
        "description": "The data attributes associated with an Early Career Teacher",
        "type": "object",
        "required": [
          "email",
          "full_name",
          "school_urn",
          "participant_type",
          "cohort",
          "status"
        ],
        "properties": {
          "email": {
            "description": "The email registered for this participant",
            "type": "string",
            "example": "jane.smith@some-school.example.com"
          },
          "full_name": {
            "description": "The full name of the participant",
            "type": "string",
            "example": "Jane Smith"
          },
          "mentor_id": {
            "description": "The unique identifier of the participants mentor",
            "type": "string",
            "example": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
            "format": "uuid"
          },
          "school_urn": {
            "description": "The Unique Reference Number (URN) of the school the submitted this participant",
            "type": "string",
            "example": "106286"
          },
          "participant_type": {
            "description": "The type of participant this record refers to either ECT or Mentor",
            "type": "string",
            "example": "ect",
            "enum": [
              "ect",
              "mentor"
            ]
          },
          "cohort": {
            "description": "Which cohort this participant is associated with",
            "type": "string",
            "example": "2021"
          },
          "status": {
            "description": "The status of the participant",
            "type": "string",
            "example": "active",
            "enum": [
              "active",
              "withdrawn"
            ]
          }
        }
      },
      "ParticipantCsvRow": {
        "description": "The details of a participant",
        "type": "object",
        "required": [
          "id",
          "type",
          "email",
          "full_name",
          "school_urn",
          "participant_type",
          "cohort",
          "status"
        ],
        "properties": {
          "id": {
            "description": "The unique identifier of the participant record",
            "type": "string",
            "format": "uuid",
            "example": "db3a7848-7308-4879-942a-c4a70ced400a"
          },
          "type": {
            "description": "The data type",
            "type": "string",
            "example": "participant"
          },
          "email": {
            "description": "The email registered for this participant",
            "type": "string",
            "example": "jane.smith@some-school.example.com"
          },
          "full_name": {
            "description": "The full name of the participant",
            "type": "string",
            "example": "Jane Smith"
          },
          "mentor_id": {
            "description": "The unique identifier of the participants mentor",
            "type": "string",
            "example": "bb36d74a-68a7-47b6-86b6-1fd0d141c590",
            "format": "uuid"
          },
          "school_urn": {
            "description": "The Unique Reference Number (URN) of the school the submitted this participant",
            "type": "string",
            "example": "106286"
          },
          "participant_type": {
            "description": "The type of participant this record refers to either ECT or Mentor",
            "type": "string",
            "example": "ect",
            "enum": [
              "ect",
              "mentor"
            ]
          },
          "cohort": {
            "description": "Which cohort this participant is associated with",
            "type": "string",
            "example": "2021"
          },
          "status": {
            "description": "The status of the participant",
            "type": "string",
            "example": "active",
            "enum": [
              "active"
            ]
          }
        }
      },
      "ParticipantDeclaration": {
        "description": "A participant declaration",
        "type": "object",
        "properties": {
          "participant_id": {
            "description": "The unique id of the participant",
            "type": "string",
            "format": "uuid",
            "example": "db3a7848-7308-4879-942a-c4a70ced400a"
          },
          "declaration_type": {
            "description": "The event declaration type",
            "type": "string",
            "enum": [
              "started",
              "retained_1",
              "retained_2",
              "retained_3",
              "retained_4",
              "completed"
            ],
            "example": "started"
          },
          "declaration_date": {
            "description": "The event declaration date",
            "type": "string",
            "format": "date-time",
            "example": "2021-05-31T02:21:32.000Z"
          }
        },
        "required": [
          "participant_id",
          "declaration_type",
          "declaration_date"
        ],
        "example": {
          "participant_id": "db3a7848-7308-4879-942a-c4a70ced400a",
          "declaration_type": "started",
          "declaration_date": "2021-05-31T02:21:32.000Z"
        }
      },
      "ParticipantDeclarationRecordedResponse": {
        "description": "The participant declaration has been recorded successfully",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "A unique identifier to reference the declaration in future actions",
            "type": "string",
            "format": "uuid",
            "example": "b0f657a7-9a81-4a89-a6b0-627c774ff753"
          }
        }
      },
      "ParticipantFilter": {
        "description": "Filter a list of participants to return more specific results",
        "type": "object",
        "properties": {
          "updated_since": {
            "description": "Return participants that have been updated since the date (ISO 8601 date format)",
            "type": "string",
            "example": "2021-05-13T11:21:55Z"
          }
        }
      },
      "UnauthorisedResponse": {
        "description": "Authorization information is missing or invalid",
        "type": "string",
        "example": "HTTP Token: Access denied."
      }
    }
  },
  "security": [
    {
      "bearerAuth": [

      ]
    }
  ]
}