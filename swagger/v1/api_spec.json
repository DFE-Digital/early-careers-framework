{
  "openapi": "3.0.1",
  "info": {
    "title": "API documentation",
    "version": "v1",
    "description": "API for DfE CPD's participant service"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "string",
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "error_response": {
        "type": "object",
        "properties": {
          "bad_or_missing_parameter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "minItems": 1
          }
        }
      },
      "id": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": [

      ]
    }
  ],
  "paths": {
    "/api/v1/npq-applications": {
      "get": {
        "summary": "Returns all NPQ applications for current lead provider",
        "operationId": "api_v1_npq_applications_index",
        "tags": [
          "npq_applications"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "description": "This schema is used to search within collections to return more specific results.",
              "example": {
                "updated_since": "2020-11-13T11:21:55Z"
              },
              "properties": {
                "updated_since": {
                  "description": "Return participants that have been updated since the specified timestamp (ISO 8601 format)",
                  "type": "string",
                  "example": "2021-05-13T11:21:55Z"
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine NPQ applications to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object",
              "description": "This schema used to paginate through a collection.",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "The page number to paginate to in the collection. If no value is specified it defaults to the first page.",
                  "example": 3
                },
                "per_page": {
                  "type": "integer",
                  "description": "The number items to display on a page. Defaults to 100. Maximum is 500, if the value is greater that the maximum allowed it will fallback to 100.",
                  "example": 10
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": {
              "page": 1,
              "per_page": 5
            },
            "description": "Pagination options to navigate through the collection."
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of NPQ applications.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "required": [
                              "id",
                              "participant_id",
                              "full_name",
                              "email",
                              "email_validated",
                              "teacher_reference_number",
                              "teacher_reference_number_validated",
                              "school_urn",
                              "headteacher_status",
                              "eligible_for_funding",
                              "funding_choice",
                              "course_id",
                              "course_name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "participant_id": {
                                "type": "string"
                              },
                              "full_name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "email_validated": {
                                "type": "boolean"
                              },
                              "teacher_reference_number": {
                                "type": "string"
                              },
                              "teacher_reference_number_validated": {
                                "type": "boolean"
                              },
                              "school_urn": {
                                "type": "string"
                              },
                              "headteacher_status": {
                                "type": "string",
                                "enum": [
                                  "no",
                                  "yes_when_course_starts",
                                  "yes_in_first_two_years",
                                  "yes_over_two_years"
                                ]
                              },
                              "eligible_for_funding": {
                                "type": "boolean"
                              },
                              "funding_choice": {
                                "type": "string",
                                "enum": [
                                  "school",
                                  "trust",
                                  "self",
                                  "another"
                                ]
                              },
                              "course_id": {
                                "type": "string"
                              },
                              "course_name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/npq-applications.csv": {
      "get": {
        "summary": "Returns all NPQ applications for the current lead provider",
        "operationId": "api_v1_npq_applications_index_csv",
        "tags": [
          "npq_applications"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "example": "",
              "description": "This schema is used to search within collections to return more specific results.",
              "properties": {
                "updated_since": {
                  "description": "Return participants that have been updated since the specified timestamp (ISO 8601 format)",
                  "type": "string",
                  "example": "2021-05-13T11:21:55Z"
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine NPQ applications to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of participants.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/participant-declarations": {
      "post": {
        "summary": "Create participant declarations",
        "operationId": "api_v1_create_ect_participant",
        "tags": [
          "participant_declarations"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": {
                    "type": "string"
                  },
                  "declaration_type": {
                    "enum": [
                      "started",
                      "retained_1",
                      "retained_2",
                      "retained_3",
                      "retained_4",
                      "completed"
                    ]
                  },
                  "declaration_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "participant_id",
                  "declaration_type",
                  "declaration_date"
                ],
                "example": {
                  "participant_id": "db3a7848-7308-4879-942a-c4a70ced400a",
                  "declaration_type": "started",
                  "declaration_date": "2021-05-31T02:21:32Z"
                }
              }
            }
          }
        },
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/id"
                }
              }
            }
          },
          "422": {
            "description": "Bad or Missing parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error_response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/participants": {
      "get": {
        "summary": "Returns all participants",
        "operationId": "api_v1_participants_index",
        "tags": [
          "participant"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "example": "",
              "description": "This schema is used to search within collections to return more specific results.",
              "properties": {
                "updated_since": {
                  "description": "Return participants that have been updated since the date (ISO 8601 date format)",
                  "type": "string",
                  "example": "2021-05-13T11:21:55Z"
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine participants to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "object",
              "description": "This schema used to paginate through a collection.",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "The page number to paginate to in the collection. If no value is specified it defaults to the first page.",
                  "example": 3
                },
                "per_page": {
                  "type": "integer",
                  "description": "The number items to display on a page. Defaults to 100. Maximum is 500, if the value is greater that the maximum allowed it will fallback to 500.",
                  "example": 10
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "example": {
              "page": 1,
              "per_page": 5
            },
            "description": "Pagination options to navigate through the collection."
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of participants.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "attributes": {
                            "type": "object",
                            "required": [
                              "email",
                              "full_name",
                              "mentor_id",
                              "school_urn",
                              "participant_type",
                              "cohort"
                            ],
                            "properties": {
                              "email": {
                                "type": "string"
                              },
                              "full_name": {
                                "type": "string"
                              },
                              "mentor_id": {
                                "type": "string"
                              },
                              "school_urn": {
                                "type": "string"
                              },
                              "participant_type": {
                                "type": "string",
                                "enum": [
                                  "mentor",
                                  "ect"
                                ]
                              },
                              "cohort": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/participants.csv": {
      "get": {
        "summary": "Returns all participants",
        "operationId": "api_v1_participants_index",
        "tags": [
          "participant"
        ],
        "security": [
          {
            "bearerAuth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "object",
              "example": "",
              "description": "This schema is used to search within collections to return more specific results.",
              "properties": {
                "updated_since": {
                  "description": "Return participants that have been updated since the date (ISO 8601 date format)",
                  "type": "string",
                  "example": "2021-05-13T11:21:55Z"
                }
              }
            },
            "style": "deepObject",
            "explode": true,
            "required": false,
            "description": "Refine participants to return.",
            "example": {
              "updated_since": "2020-11-13T11:21:55Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of participants.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}