<%= govuk_summary_list do |sl|
  sl.with_row do |row|
    row.with_key(text: "Full name")
    row.with_value(text: @participant_presenter.full_name)
    unless @participant_profile.user.get_an_identity_id.present?
      row.with_action(
        href: edit_admin_participant_change_name_path(@participant_profile),
        visually_hidden_text: "name"
      )
    end
  end

  sl.with_row do |row|
    row.with_key(text: "User email address")
    row.with_value(text: @participant_presenter.email)
    unless @participant_profile.user.get_an_identity_id.present?
      row.with_action(
        href: edit_admin_participant_change_email_path(@participant_profile),
        visually_hidden_text: "email"
      )
    end
  end

  if policy(:super_user).show?
    sl.with_row do |row|
      row.with_key(text: "Participant identity")
      row.with_value(text: @participant_presenter.participant_identity.email)
    end
  end

  sl.with_row do |row|
    row.with_key(text: "Date of birth")
    row.with_value(text: @participant_presenter&.ecf_participant_validation_data&.date_of_birth&.to_fs(:govuk))
  end

  if @participant_presenter.enrolled_in_fip?
    sl.with_row do |row|
      row.with_key(text: "Lead provider")
      row.with_value(text: @participant_presenter.lead_provider_name)
      if policy(:super_user).show?
        row.with_action(
          href: start_admin_change_relationship_participant_path(@participant_profile),
          visually_hidden_text: "lead provider"
        )
      end
    end

    sl.with_row do |row|
      row.with_key(text: "Delivery partner")
      row.with_value(text: @participant_presenter.delivery_partner_name)
      if policy(:super_user).show?
        row.with_action(
          href: start_admin_change_relationship_participant_path(@participant_profile),
          visually_hidden_text: "delivery partner"
        )
      end
    end
  end

  sl.with_row do |row|
    row.with_key(text: "Training record state")
    row.with_value(text: render(StatusTags::AdminParticipantStatusTag.new(participant_profile: @participant_profile, school: @participant_presenter.school)))
  end

  if @participant_presenter.teacher_profile
    sl.with_row do |row|
      row.with_key(text: "TRN")
      row.with_value(text: @participant_presenter.teacher_profile.trn)
    end
  end

  sl.with_row do |row|
    row.with_key(text: "Induction start date")
    row.with_value(text: @participant_presenter.induction_start_date)
  end

  sl.with_row do |row|
    row.with_key(text: "Induction completion date")
    row.with_value(text: @participant_presenter.induction_completion_date)
  end

  sl.with_row do |row|
    row.with_key(text: "Profile ID")
    row.with_value(text: tag.code(@participant_presenter.id))
  end

  sl.with_row do |row|
    row.with_key(text: "User ID")
    row.with_value(text: tag.code(@participant_presenter.user_id))
  end

  sl.with_row do |row|
    row.with_key(text: "External ID")
    row.with_value(text: tag.code(@participant_presenter.participant_identity.external_identifier))
  end

  sl.with_row do |row|
    row.with_key(text: "Associated email addresses")
    row.with_value(text: html_list(all_emails_associated_with_a_user(@participant_profile.user)))
  end

  sl.with_row do |row|
    row.with_key(text: "Notes")

    row.with_value do
      if @participant_presenter.notes?
        simple_format(@participant_presenter.notes, class: "govuk-body")
      else
        "No notes"
      end
    end

    notes_present = @participant_presenter.notes.present?

    row.with_action(
      text: notes_present ? "Change notes" : "Add notes",
      href: edit_admin_note_path(@participant_profile),
      visually_hidden_text: notes_present ? "on #{@participant_presenter.full_name}'s profile" : "to #{@participant_presenter.full_name}'s profile",
    )
  end
end %>
