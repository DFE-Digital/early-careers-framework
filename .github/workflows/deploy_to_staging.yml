name: Deploy to Staging

on:
  workflow_dispatch:
    inputs:
      version:
        description: Which version are you creating?
        required: true
      ref:
        description: Git ref to deploy
        required: true
        default: develop
jobs:
  deploy-to-staging:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        name: Checkout Code
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Branch protection OFF
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/DFE-Digital/early-careers-framework/branches/master/protection
          repository: ${{ github.repository }}
          owner: DFE-Digital
          required_status_checks: |
            null
          required_pull_request_reviews: |
            null
          enforce_admins: |
            null
          allow_force_pushes: |
            true
          required_linear_history: |
            true
          allow_deletions: |
            null
          restrictions: |
            null
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: Update master
        run: |
          git fetch
          git branch tmp-branch
          git switch master
          git reset --hard tmp-branch --
          git branch -D tmp-branch
          git tag -f ${{ github.event.inputs.version }}

          git push --force origin ${{ github.event.inputs.version }}
          git push --force origin master

          echo "HEAD=$(git rev-parse ${{ github.event.inputs.version }})" >> $GITHUB_ENV

      - name: Branch protection ON
        uses: octokit/request-action@v2.x
        if: always() # Force this step to run so we don't leave master unprotected
        with:
          route: PUT /repos/DFE-Digital/early-careers-framework/branches/master/protection
          repository: ${{ github.repository }}
          owner: DFE-Digital
          required_status_checks: |
            strict: true
            contexts:
              - Run Cypress
              - Run frontend JS unit tests
              - Run rspec
              - deploy
              - lint
          required_pull_request_reviews: |
            dismiss_stale_reviews: true
            require_code_owner_reviews: true
          enforce_admins: |
            true
          allow_force_pushes: |
            null
          required_linear_history: |
            true
          allow_deletions: |
            null
          restrictions: |
            null
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: setup-inputs
        run: |
          INPUTS='${{ format('{{"environment": "staging", "ref": "{0}"}}', env.HEAD) }}'
          echo "INPUTS=${INPUTS}" >> $GITHUB_ENV

      - name: trigger-deploy
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Deploy to Environment # Workflow name, in deploy.yml
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: ${{ env.INPUTS }}
          ref: ${{ env.HEAD }}

      - name: Wait for Deploy App Workflow
        id: wait_for_deploy_app
        uses: fountainhead/action-wait-for-check@v1.0.0
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          ref: ${{ env.HEAD }}
          checkName: build docker image and deploy # Job name within workflow
          timeoutSeconds: 900
          intervalSeconds: 15

      - name: Fail if child job fails
        if: ${{ steps.wait_for_deploy_app.outputs.conclusion != 'success' }}
        run: exit 1
