name: Deploy to Staging

on:
  workflow_dispatch:
    inputs:
      version:
        description: Which version are you creating? ("vx.x.x")
        required: true
      ref:
        description: Git ref to deploy
        required: true
        default: develop

jobs:
  deploy-to-staging:
    runs-on: ubuntu-20.04
    steps:
      - uses: softprops/turnstyle@v1
        name: Check workflow concurrency
        with:
          poll-interval-seconds: 20
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check tag format
        run: |
          echo ${{ github.event.inputs.version }} | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$'

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.0

      - uses: actions/checkout@v2
        name: Checkout Code
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Branch protection OFF
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/DFE-Digital/ecf-engage-and-learn/branches/master/protection
          repository: ${{ github.repository }}
          owner: DFE-Digital
          required_status_checks: |
            null
          required_pull_request_reviews: |
            null
          enforce_admins: |
            null
          allow_force_pushes: |
            true
          required_linear_history: |
            true
          allow_deletions: |
            null
          restrictions: |
            null
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: Update master
        run: |
          git fetch
          git branch tmp-branch
          git switch master
          git reset --hard tmp-branch --
          git branch --delete --force tmp-branch
          git tag --force ${{ github.event.inputs.version }}

          git push --force origin refs/tags/${{ github.event.inputs.version }}
          git push --force origin master

          echo "HEAD=$(git rev-parse ${{ github.event.inputs.version }})" >> $GITHUB_ENV

      - name: Branch protection ON
        uses: octokit/request-action@v2.x
        if: always() # Force this step to run so we don't leave master unprotected
        with:
          route: PUT /repos/DFE-Digital/ecf-engage-and-learn/branches/master/protection
          repository: ${{ github.repository }}
          owner: DFE-Digital
          required_status_checks: |
            strict: true
            contexts:
              - Run Cypress
              - Run frontend JS unit tests
              - Run rspec
              - deploy
              - lint
          required_pull_request_reviews: |
            dismiss_stale_reviews: true
            require_code_owner_reviews: true
          enforce_admins: |
            true
          allow_force_pushes: |
            null
          required_linear_history: |
            true
          allow_deletions: |
            null
          restrictions: |
            null
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_DEV_PASSWORD }}

      - name: retag docker image
        run: |
          docker pull dfedigital/early-careers-framework-prod:engage-and-learn-${{ env.HEAD }}
          docker tag dfedigital/early-careers-framework-prod:engage-and-learn-${{ env.HEAD }} dfedigital/early-careers-framework-prod:engage-and-learn-${{ github.event.inputs.version }}
          docker push dfedigital/early-careers-framework-prod:engage-and-learn-${{ github.event.inputs.version }}

      - name: Deploy to staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_STAG_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_STAG_PASSWORD }}
        run: |
          export TF_VAR_paas_app_docker_image=dfedigital/early-careers-framework-prod:engage-and-learn-${{ github.event.inputs.version }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=paas-s3-broker-prod-lon-9a67a82f-6b33-426e-bb6c-d51e738d7984"
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/staging.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_STAGING}}", "RELEASE_VERSION":"${{github.event.inputs.version}}"}'
