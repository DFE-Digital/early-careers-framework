name: Deploy to Sandbox

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to deploy ("vx.x.x")
        required: true

jobs:
  deploy-to-sandbox:
    runs-on: ubuntu-20.04
    concurrency:
      group: deploy-to-sandbox

    steps:
      - name: Check tag format
        run: |
          echo ${{ github.event.inputs.version }} | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$'

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 0.14.0

      - name: Deploy to Sandbox
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_STAG_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_STAG_PASSWORD }}
          TF_VAR_statuscake_api_token: ${{ secrets.STATUSCAKE_API_TOKEN }}
        run: |
          export TF_VAR_paas_app_docker_image=dfedigital/early-careers-framework-prod:${{ github.event.inputs.version }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=paas-s3-broker-prod-lon-d25ff054-929d-4206-8c6f-d5c4a93ed5c3"
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/sandbox.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_SANDBOX}}", "RELEASE_VERSION":"${{github.event.inputs.version}}"}' -var 'logstash_url=${{secrets.SYSLOG_DRAIN_URL}}' -var 'docker_username=${{ secrets.DOCKER_USERNAME }}' -var 'docker_password=${{ secrets.DOCKER_DEV_PASSWORD }}'
