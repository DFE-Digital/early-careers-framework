name: Deploy to Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
        default: dev
      ref:
        description: Git ref to deploy
        required: true
        default: develop

env:
  DOCKERHUB_REPOSITORY_BASE: dfedigital/early-careers-framework-

jobs:
  turnstyle:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: softprops/turnstyle@v1
        name: Check workflow concurrency
        with:
          poll-interval-seconds: 20
          same-branch-only: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: build docker image and deploy
    needs: turnstyle
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        name: Checkout Code
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.0

      - name: Set environment variables
        id: set_env_vars
        run:
          echo "TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_DEV_PASSWORD }}

      - name: Set dockerhub repo
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }}
          if [[ "$ENVIRONMENT" == *"review"* ]]; then DOCKERHUB_ENV=dev; else DOCKERHUB_ENV=$ENVIRONMENT; fi
          echo "DOCKERHUB_ENV=$DOCKERHUB_ENV" >> $GITHUB_ENV

      - name: Build and push docker image from builder target
        uses: docker/build-push-action@v2
        with:
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:builder
          push: true
          tags: ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:builder
          target: builder

      - name: Build and push docker image from early-careers-framework-gems-node-modules target
        uses: docker/build-push-action@v2
        with:
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:gems-node-modules
          push: true
          tags: ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:gems-node-modules
          target: early-careers-framework-gems-node-modules

      - name: Build and push docker image from assets-precompile target
        uses: docker/build-push-action@v2
        with:
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:assets-precompile
          push: true
          tags: ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:assets-precompile
          target: assets-precompile

      - name: Build and push docker image from production target
        uses: docker/build-push-action@v2
        with:
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            VERSION=${{ env.TAG }}
          cache-from: |
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:${{ github.event.inputs.environment }}
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:latest
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:${{ env.TAG }}
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:${{ github.event.inputs.environment }}
            ${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:latest
          target: production

      - name: Deploy to dev
        if: ${{ github.event.inputs.environment == 'dev' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_DEV_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_DEV_PASSWORD }}
        run: |
          export TF_VAR_paas_app_docker_image=${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:${{ env.TAG }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=paas-s3-broker-prod-lon-7f2ca242-9929-4662-a79c-c454ea56ea7b"
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/dev.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_DEV}}"}' -var 'logstash_url=${{secrets.SYSLOG_DRAIN_URL}}'

      - name: Deploy review app to dev
        if: ${{ startsWith(github.event.inputs.environment, 'review') }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_DEV_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_DEV_PASSWORD }}
        run: |
          export TF_VAR_paas_app_docker_image=${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:${{ env.TAG }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=paas-s3-broker-prod-lon-7f2ca242-9929-4662-a79c-c454ea56ea7b" -backend-config="key=${{ github.event.inputs.environment }}/terraform.tfstate"
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/review.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_DEV}}"}' -var='environment=${{github.event.inputs.environment}}' -var 'logstash_url=${{secrets.SYSLOG_DRAIN_URL}}'

      - name: Deploy to staging
        if: ${{ github.event.inputs.environment == 'staging' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_STAG_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_STAG_PASSWORD }}
        run: |
          export TF_VAR_paas_app_docker_image=${{ env.DOCKERHUB_REPOSITORY_BASE }}${{ env.DOCKERHUB_ENV }}:${{ env.TAG }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=paas-s3-broker-prod-lon-e2123d0b-d394-4594-8056-315300e7d8a8"
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/staging.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_STAGING}}"}' -var 'logstash_url=${{secrets.SYSLOG_DRAIN_URL}}'

