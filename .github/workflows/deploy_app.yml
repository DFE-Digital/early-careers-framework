name: Deploy App to Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true
      tag:
        description: Docker tag
        required: true

env:
  DOCKERHUB_REPOSITORY: dfedigital/early-careers-framework-dev

jobs:
  deploy-app:
    name: Deploy app to environment
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        name: Checkout Code

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.13.4

      - name: Set environment variables
        run: |
          PARAMETER_STORE_ENVIRONMENT=${{ github.event.inputs.environment }}
          VAR_FILE=${{ github.event.inputs.environment }}
          echo "PARAMETER_STORE_ENVIRONMENT=${PARAMETER_STORE_ENVIRONMENT}" >> $GITHUB_ENV
          echo "VAR_FILE=${VAR_FILE}" >> $GITHUB_ENV

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Validate secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2
        run: |
          gem install aws-sdk-ssm --no-document
          bin/run-in-env -t /teaching-vacancies/${{ env.PARAMETER_STORE_ENVIRONMENT }} -o quiet \
            && echo Data in /teaching-vacancies/${{ env.PARAMETER_STORE_ENVIRONMENT }} looks valid

      - name: Deploy to environment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_user: ${{ secrets.CF_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.CF_PASSWORD }}
        run: |
          export TF_VAR_paas_app_docker_image=${{ env.DOCKERHUB_REPOSITORY }}:${{ github.event.inputs.tag }}
          cd terraform/app
          terraform init -reconfigure -input=false ${{ env.BACKEND_CONFIG }}
          terraform workspace select ${{ github.event.inputs.environment }} || terraform workspace new ${{ github.event.inputs.environment }}
          terraform apply -var-file ../workspace-variables/${{ env.VAR_FILE }}.tfvars -auto-approve -input=false
