name: "Deploy"
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deploy environment"
        required: true
        default: review_aks
        type: environment
        options:
          - review_aks
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
    types:
      - labeled
      - synchronize
      - reopened
      - opened

jobs:
  lint:
    name: Lint
    uses: ./.github/workflows/lint.yml

  rspec:
    name: Run the RSpec tests
    uses: ./.github/workflows/rspec.yml

  cypress:
    name: Run the Cypress tests
    uses: ./.github/workflows/cypress.yml

  permit-merge:
    name: Permit merge
    needs: [lint, rspec, cypress]
    runs-on: ubuntu-latest
    steps:
      - run: "echo 'Linting and tests passed, this branch is ready to be merged'"

  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'

    outputs:
      image: ${{ steps.build-docker-image.outputs.image }}

    steps:
      - uses: actions/checkout@v3

      - uses: DFE-Digital/github-actions/build-docker-image@master
        id: build-docker-image
        with:
          docker-repository: ghcr.io/dfe-digital/early-careers-framework
          github-token: ${{ secrets.GITHUB_TOKEN }}

  brakeman:
    name: Run Brakeman vulnerability scanner
    uses: ./.github/workflows/brakeman.yml
    with:
      ruby-version: "3.2.2"

  deploy_review:
    name: Deploy to review environment
    concurrency: deploy_review_${{ github.event.pull_request.number }}
    if: contains(github.event.pull_request.labels.*.name, 'review-app') && github.event_name == 'pull_request'
    needs: [docker, brakeman]
    runs-on: ubuntu-latest
    environment:
      name: review
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/deploy-environment-to-aks
        id: deploy
        with:
          environment: review
          docker-image: ${{ needs.docker.outputs.image }}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
          pull-request-number: ${{ github.event.pull_request.number }}
          current-commit-sha: ${{ github.event.pull_request.head.sha }}

      - name: Post sticky pull request comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Review app deployed to ${{ steps.deploy.outputs.url }}

  deploy_staging:
    needs: [docker, rspec, cypress, lint, brakeman]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: staging

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/deploy-environment-to-aks
        id: deploy
        with:
          environment: staging
          docker-image: ${{ needs.docker.outputs.image }}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
          current-commit-sha: ${{ github.sha }}

  deploy_sandbox:
    needs: [deploy_staging]
    runs-on: ubuntu-latest
    environment:
      name: sandbox

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/deploy-environment-to-aks
        id: deploy
        with:
          environment: sandbox
          docker-image: ${{ needs.docker.outputs.image }}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
          current-commit-sha: ${{ github.sha }}

  deploy_production:
    needs: [deploy_staging]
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/deploy-environment-to-aks
        id: deploy
        with:
          environment: production
          docker-image: ${{ needs.docker.outputs.image }}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
          current-commit-sha: ${{ github.sha }}
