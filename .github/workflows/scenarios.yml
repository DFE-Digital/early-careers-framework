name: End-to-End scenario testing

on:
  push:
    branches:
      - '**'

jobs:
  create-nonce:
    name: Create nonce
    runs-on: ubuntu-20.04
    outputs:
      nonce: ${{ steps.generate-nonce.outputs.nonce }}
    steps:
      - id: generate-nonce
        run: echo "::set-output name=nonce::$(tr -dc 0-9 </dev/urandom | head -c 18 ; echo '')"

  backend-tests:
    name: Run rspec
    runs-on: ubuntu-20.04
    needs: create-nonce

    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: ''
      DB_HOSTNAME: 127.0.0.1
      DB_PORT: 5432
      ANALYTICS_DB_USERNAME: postgres
      ANALYTICS_DB_PASSWORD: ''
      ANALYTICS_DB_HOSTNAME: 127.0.0.1
      ANALYTICS_DB_PORT: 5432

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ''
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.99.0
        with:
          bundler-cache: true
          ruby-version: '2.7.4'

      - name: Set up Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: '14.x'
          cache: 'yarn'

      - name: Install node.js dependencies
        run: yarn install --production=false --frozen-lockfile --ignore-engines --prefer-offline

      - name: Set up test database
        run: bin/rails db:create db:schema:load

      - name: Run tests
        run: bundle exec bin/scenarios_ci
