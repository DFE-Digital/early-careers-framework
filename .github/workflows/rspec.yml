name: "RSpec"
on:
  workflow_call:
    inputs:
      run-end-to-end-tests:
        description: Run the e2e tests
        type: boolean
        required: false
        default: true

jobs:
  backend-tests:
    name: Run rspec
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [6]
        ci_node_index: [0, 1, 2, 3, 4, 5]

    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: ""
      DB_HOSTNAME: 127.0.0.1
      DB_PORT: 5432
      ANALYTICS_DB_USERNAME: postgres
      ANALYTICS_DB_PASSWORD: ""
      ANALYTICS_DB_HOSTNAME: 127.0.0.1
      ANALYTICS_DB_PORT: 5432
      CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
      CI_NODE_INDEX: ${{ matrix.ci_node_index }}
      CI: true

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.152.0
        with:
          bundler-cache: true
          ruby-version: "3.2.2"

      - name: Set up Node
        uses: actions/setup-node@v3.7.0
        with:
          node-version: "18.17.x"
          cache: "yarn"

      - name: Install node.js dependencies
        run: yarn install --production=false --frozen-lockfile --ignore-engines --prefer-offline

      - name: Set up test database
        run: bin/rails db:create db:schema:load

      - name: Prepare assets
        run: bin/rails test:prepare

      - name: Run tests
        run: bundle exec bin/rspec_ci

  e2e-scenarios:
    if: ${{ inputs.run-end-to-end-tests }}
    name: Run end to end scenarios
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [10]
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: ""
      DB_HOSTNAME: 127.0.0.1
      DB_PORT: 5432
      ANALYTICS_DB_USERNAME: postgres
      ANALYTICS_DB_PASSWORD: ""
      ANALYTICS_DB_HOSTNAME: 127.0.0.1
      ANALYTICS_DB_PORT: 5432
      CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
      CI_NODE_INDEX: ${{ matrix.ci_node_index }}
      CI: true

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.152.0
        with:
          bundler-cache: true
          ruby-version: "3.2.2"

      - name: Set up Node
        uses: actions/setup-node@v3.7.0
        with:
          node-version: "18.17.x"
          cache: "yarn"

      - name: Install node.js dependencies
        run: yarn install --production=false --frozen-lockfile --ignore-engines --prefer-offline

      - name: Set up test database
        run: bin/rails db:create db:schema:load

      - name: Prepare assets
        run: bin/rails test:prepare

      - name: Run tests
        run: bundle exec bin/scenarios_ci
