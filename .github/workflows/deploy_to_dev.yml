name: Deploy to Dev

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'documentation/**'

jobs:
  deploy-to-dev:
    runs-on: ubuntu-20.04
    concurrency:
      group: deploy-to-dev

    steps:
      - uses: actions/checkout@v3
        name: Checkout Code

      - name: Pin Terraform version
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 0.14.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
        with:
          version: v0.9.1 # More recent buildx versions generate an OCI manifest

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_DEV_PASSWORD }}

      - name: Build and push docker image from builder target
        uses: docker/build-push-action@v4
        with:
          target: builder
          context: .
          cache-from: |
            dfedigital/early-careers-framework-dev:builder
          tags: |
            dfedigital/early-careers-framework-dev:builder
          push: true
          provenance: false
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push docker image from early-careers-framework-gems-node-modules target
        uses: docker/build-push-action@v4
        with:
          target: early-careers-framework-gems-node-modules
          context: .
          cache-from: |
            dfedigital/early-careers-framework-dev:gems-node-modules
          tags: |
            dfedigital/early-careers-framework-dev:gems-node-modules
          push: true
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push docker image from assets-precompile target
        uses: docker/build-push-action@v4
        with:
          target: assets-precompile
          context: .
          cache-from: |
            dfedigital/early-careers-framework-dev:assets-precompile
          tags: |
            dfedigital/early-careers-framework-dev:assets-precompile
          push: true
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Build and push docker image from production target
        uses: docker/build-push-action@v4
        with:
          target: production
          context: .
          cache-from: |
            dfedigital/early-careers-framework-prod:latest
          tags: |
            dfedigital/early-careers-framework-prod:${{ github.sha }}
            dfedigital/early-careers-framework-prod:latest
          push: true
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            SHA=${{ github.sha }}

      - name: Deploy to dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_paas_user: ${{ secrets.GOVPAAS_DEV_USERNAME }}
          TF_VAR_paas_password: ${{ secrets.GOVPAAS_DEV_PASSWORD }}
          TF_VAR_statuscake_api_token: ${{ secrets.STATUSCAKE_API_TOKEN }}
        run: |
          export TF_VAR_paas_app_docker_image=dfedigital/early-careers-framework-prod:${{ github.sha }}
          cd terraform/app
          terraform init -reconfigure -input=false -backend-config="bucket=paas-s3-broker-prod-lon-7f2ca242-9929-4662-a79c-c454ea56ea7b"
          terraform apply -input=false -auto-approve -var-file ../workspace-variables/dev.tfvars -var='secret_paas_app_env_values={"RAILS_MASTER_KEY":"${{secrets.RAILS_MASTER_KEY_DEV}}"}' -var 'logstash_url=${{secrets.SYSLOG_DRAIN_URL}}' -var 'docker_username=${{ secrets.DOCKER_USERNAME }}' -var 'docker_password=${{ secrets.DOCKER_DEV_PASSWORD }}'
