name: Test

on:
  push:
    branches:
      - '**'

jobs:
  create-nonce:
    name: Create nonce
    runs-on: ubuntu-20.04
    outputs:
      nonce: ${{ steps.generate-nonce.outputs.nonce }}
    steps:
      - id: generate-nonce
        run: echo "::set-output name=nonce::$(tr -dc 0-9 </dev/urandom | head -c 18 ; echo '')"

  backend-tests:
    name: Run rspec
    runs-on: ubuntu-20.04
    needs: create-nonce

    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: ''
      DB_HOSTNAME: 127.0.0.1
      DB_PORT: 5432
      ANALYTICS_DB_USERNAME: postgres
      ANALYTICS_DB_PASSWORD: ''
      ANALYTICS_DB_HOSTNAME: 127.0.0.1
      ANALYTICS_DB_PORT: 5432
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      PERCY_PARALLEL_NONCE: ${{ needs.create-nonce.outputs.nonce }}
      PERCY_PARALLEL_TOTAL: 2

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ''
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.82.0
        with:
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14.x'
          cache: 'yarn'

      - name: Install yarn
        run: npm install yarn -g

      - name: Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node.js dependencies
        run: yarn install

      - name: Set up test database
        run: bin/rails db:create db:schema:load

      - name: Run tests
        run: yarn percy exec --parallel -- bundle exec rspec

  frontend-tests:
    name: Run frontend JS unit tests

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14.x'
          cache: 'yarn'

      - name: Install yarn
        run: npm install yarn -g

      - name: Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node.js dependencies
        run: yarn install

      - name: run frontend tests and linting
        run: yarn run test

  e2e-tests:
    name: Run Cypress
    runs-on: ubuntu-20.04
    needs: create-nonce

    env:
      RAILS_ENV: test
      DB_USERNAME: postgres
      DB_PASSWORD: ''
      DB_HOSTNAME: 127.0.0.1
      DB_PORT: 5432
      ANALYTICS_DB_USERNAME: postgres
      ANALYTICS_DB_PASSWORD: ''
      ANALYTICS_DB_HOSTNAME: 127.0.0.1
      ANALYTICS_DB_PORT: 5432

    services:
      postgres:
        image: postgres:11.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ''
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.82.0
        with:
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '14.x'
          cache:  'yarn'

      - name: Install yarn
        run: npm install yarn -g

      - name: Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node.js dependencies
        run: yarn install

      - name: Set up test database
        run: bin/rails db:create db:schema:load

      - name: Webpacker
        run: bin/webpack

      # Percy stuff is from https://dev.to/digitaledawn/github-action-cypress-and-percy-parallelisation-setup-484a
      - name: Run Cypress
        uses: cypress-io/github-action@v2
        with:
          start: bundle exec rails server -e test -p 5017
          wait-on: 'http://localhost:5017/'
          env: port=5017
          project: ./spec
          command-prefix: 'percy exec --parallel -- npx'
          config: 'video=false,screenshotOnRunFailure=false'
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          PERCY_PARALLEL_NONCE: ${{ needs.create-nonce.outputs.nonce }}
          PERCY_PARALLEL_TOTAL: 2
